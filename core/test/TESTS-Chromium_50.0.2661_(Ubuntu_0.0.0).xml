<?xml version="1.0"?>
<testsuite name="Chromium 50.0.2661 (Ubuntu 0.0.0)" package="" timestamp="2016-06-02T05:15:20" id="0" hostname="andreas" tests="686" errors="0" failures="0" time="4.276">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/50.0.2661.102 Chrome/50.0.2661.102 Safari/537.36"/>
  </properties>
  <testcase name="OnsAlertDialogElement exists" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement provides 'modifier' attribute" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #_titleElement is an HTML element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #_contentElement is an HTML element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #_dialog is an HTML element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #disabled changes the &quot;disabled&quot; attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #cancelable changes the &quot;cancelable&quot; attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #show() shows the dialog" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #show() emits 'preshow' event" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #show() emits 'postshow' event" time="0.023" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #show() can be cancelled" time="0.009" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #show() returns a promise that resolves to the displayed element" time="0.02" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #hide() hides the dialog" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #hide() emits 'prehide' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #hide() emits 'posthide' event" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #hide() can be cancelled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #hide() returns a promise that resolves to the hidden element" time="0.022" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #onDeviceBackButton cancels if dialog is cancelable" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #onDeviceBackButton calls parent handler if dialog is not cancelable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #_cancel() hides the dialog if it is cancelable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #visible returns whether the dialog is visible or not" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #registerAnimator() throws an error if animator is not a DialogAnimator" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #registerAnimator() registers a new animator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="OnsAlertDialogElement #_compile() does not compile twice" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsAlertDialogElement"/>
  <testcase name="autoStyling adds 'material' modifier on Android" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).autoStyling"/>
  <testcase name="OnsBackButtonElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="OnsBackButtonElement provides 'modifier' attribute" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="OnsBackButtonElement has two children" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="OnsBackButtonElement #_onClick() will pop a page" time="0.083" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="OnsBackButtonElement #onClick overrides the default click handler" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="OnsBackButtonElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="OnsBackButtonElement autoStyling adds 'material' modifiers and effects on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsBackButtonElement"/>
  <testcase name="ons-bottom-toolbar provides 'OnsBottomToolbarElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-bottom-toolbar"/>
  <testcase name="ons-bottom-toolbar classList contains 'bottom-bar' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-bottom-toolbar"/>
  <testcase name="ons-bottom-toolbar provides 'modifier' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-bottom-toolbar"/>
  <testcase name="ons-bottom-toolbar ensures it's location in the page" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-bottom-toolbar"/>
  <testcase name="ons-bottom-toolbar #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-bottom-toolbar"/>
  <testcase name="ons-button provides 'OnsButtonElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-button"/>
  <testcase name="ons-button provides modifier attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-button"/>
  <testcase name="ons-button #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-button"/>
  <testcase name="ons-button autoStyling adds 'material' modifiers and effects on Android" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-button"/>
  <testcase name="OnsCarouselItemElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselItemElement"/>
  <testcase name="OnsCarouselItemElement provides 'modifier' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselItemElement"/>
  <testcase name="OnsCarouselItemElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselItemElement"/>
  <testcase name="OnsCarouselElement should exist" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_updateSwipeable() attaches and removes listeners" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_updateAutoRefresh() starts and stops observing" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement auto-refresh calls refresh on appendChild" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement auto-refresh calls refresh on innerHTML change" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_onResize() fires 'refresh' event" time="0.012" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_onDirectionChange() is fired when the 'direction' attribute is changed" time="0.007" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_saveLastState() saves the last state" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_getCarouselItemSize() returns the 'item-width' attribute if horizontal" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_getCarouselItemSize() returns the 'item-height' attribute if vertical" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_getInitialIndex() returns 0 by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_getInitialIndex() return the 'initial-index' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #set autoScrollRatio() only accepts values between 0.0 and 1.0" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #set autoScrollRatio() can set the 'auto-scroll-ratio' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #get autoScrollRatio returns '0.5' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #get autoScrollRatio throws an error if the 'auto-scroll-ratio' attribute is invalid" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #get autoScrollRatio returns the value of the 'auto-scroll-ratio' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #setActiveIndex() should change the current active index" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #setActiveIndex() should force to maximum index" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #setActiveIndex() should fire 'postchange' event" time="0.42" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #setActiveIndex() returns a promise that resolves to the element" time="0.42" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #getActiveIndex() should return the active item index" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #next() should increase the current index" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #prev() should decrease the current index" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_isEnabledChangeEvent() should be true if auto scroll is enabled" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_isEnabledChangeEvent() should be false if auto scroll is not enabled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #refresh() fires 'refresh' event" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #refresh() renders dynamically added items" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_onDrag() should not work if the direction is vertical" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_onDrag() should work if carousel is swipeable and direction is horizontal" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_onDragEnd() should work if carousel is swipeable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_onDragEnd() should call '_scrollToKillOverScroll' if overscrolled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_getCarouselItemElements() returns the carousel item elements" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_getCarouselItemElements() doesn't return the items in child carousels (issue #844)" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_startMomentumScroll() should change the scroll value" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #first() sets the current index to 0" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #last() sets the current index to the last position" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsCarouselElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsCarouselElement"/>
  <testcase name="OnsColElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsColElement"/>
  <testcase name="OnsColElement #createdCallback() provides 'width' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsColElement"/>
  <testcase name="OnsColElement #attributeChangedCallback() provides 'width' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsColElement"/>
  <testcase name="OnsColElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsColElement"/>
  <testcase name="OnsDialogElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement provides 'modifier' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #_mask is an HTML element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #_dialog is an HTML element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #onDeviceBackButton returns the back button handler" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #onDeviceBackButton cancels if dialog is cancelable" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #onDeviceBackButton calls parent handler if dialog is not cancelable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #_cancel() hides the dialog if it is cancelable" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #_cancel() emits a 'cancel' event" time="0.009" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #disabled changes the &quot;disabled&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #cancelable changes the &quot;cancelable&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #show() shows the dialog" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #show() emits 'preshow' event" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #show() emits 'postshow' event" time="0.021" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #show() can be cancelled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #show() returns a promise that resolves to the displayed element" time="0.029" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #hide() hides the dialog" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #hide() emits 'prehide' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #hide() emits 'posthide' event" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #hide() can be cancelled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #hide() returns a promise that resolves to the hidden element" time="0.018" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #visible returns whether the dialog is visible or not" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #registerAnimator() throws an error if animator is not a DialogAnimator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement #registerAnimator() registers a new animator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsDialogElement autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsDialogElement"/>
  <testcase name="OnsFabElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement provides modifier attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #_show() calls show()" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #_hide() calls hide()" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #_updatePosition() is called when the &quot;position&quot; attribute changes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #_updatePosition() adds the correct class" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #_updatePosition() does nothing if position &quot;attribute&quot; is incorrect" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #show() sets scale transform to 1" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #hide() sets scale transform to 0" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #visible returns whether the element is currently shown or not" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #disabled changes the &quot;disabled&quot; attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #toggle() calls #show() if element is hidden" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #toggle() calls #hide() if element is shown" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsFabElement autoStyling adds 'material' effects on Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsFabElement"/>
  <testcase name="OnsGestureDetectorElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsGestureDetectorElement"/>
  <testcase name="OnsGestureDetectorElement is correctly created" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsGestureDetectorElement"/>
  <testcase name="OnsGestureDetectorElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsGestureDetectorElement"/>
  <testcase name="OnsIconElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsIconElement"/>
  <testcase name="OnsIconElement icon attribute provides 'icon' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsIconElement"/>
  <testcase name="OnsIconElement icon attribute supports a second icon depending on modifiers" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsIconElement"/>
  <testcase name="OnsIconElement size attribute provides 'size' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsIconElement"/>
  <testcase name="OnsIconElement size attribute supports a second size depending on modifiers" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsIconElement"/>
  <testcase name="OnsIconElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsIconElement"/>
  <testcase name="ons-if provides 'OnsConditionalElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-if"/>
  <testcase name="ons-if doesn't have any children" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-if"/>
  <testcase name="ons-if filters depending on 'platform' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-if"/>
  <testcase name="ons-if filters depending on 'orientation' attribute" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-if"/>
  <testcase name="OnsInputElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement provides 'modifier' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_updateLabel() is called when the placeholder attribute changes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_updateLabel() removes the label text if there is no placeholder attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_updateBoundAttributes() is called when one of the bound attribute changes" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_updateBoundAttributes() removes attributes from the input element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_updateLabelColor() sets the text color" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_onInput() calls the #_updateLabelColor()" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_onInput() is called when the value changes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_onFocusin() calls #_updateLabelColor()" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_onFocusout() calls #_updateLabelColor()" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_input is an HTMLElement" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #_helper is an HTMLElement" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #value returns the value of the internal input element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement input label assigns ID to the inner input element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement input label provides 'content-left' attribute" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #type attribute creates checkbox" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #type attribute creates radio button" time="0.007" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement #disabled changes the &quot;disabled&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsInputElement autoStyling adds 'material' modifier on Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsInputElement"/>
  <testcase name="OnsLazyRepeatElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsLazyRepeatElement"/>
  <testcase name="OnsLazyRepeatElement #refresh should be callable" time="0.011" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsLazyRepeatElement"/>
  <testcase name="OnsLazyRepeatElement #delegate should accept delegate object twice" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsLazyRepeatElement"/>
  <testcase name="ons-list-header provides 'OnsHeaderListElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list-header"/>
  <testcase name="ons-list-header classList contains 'list__header' by default" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list-header"/>
  <testcase name="ons-list-header provides modifier attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list-header"/>
  <testcase name="ons-list-header #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list-header"/>
  <testcase name="ons-list-header autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list-header"/>
  <testcase name="OnsListItemElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement classList contains 'list__item' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement provides modifier attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement #_onDrag() should prevent default if 'lock-on-drag' attribute is present" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement #_shouldLockOnDrag() returns false if 'lock-on-drag' element is not present" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement #_shouldLockOnDrag() returns true if 'lock-on-drag' element is present" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement #_onTouch() should add change the background color." time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement #_onRelease() should restore the background color." time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="OnsListItemElement autoStyling adds 'material' modifiers and effects on Android if tappable" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsListItemElement"/>
  <testcase name="ons-list provides 'OnsListElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list"/>
  <testcase name="ons-list classList contains 'list' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list"/>
  <testcase name="ons-list provides modifier attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list"/>
  <testcase name="ons-list #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list"/>
  <testcase name="ons-list autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-list"/>
  <testcase name="OnsModalElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement is not displayed by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #_compile() adds a class 'modal' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #_compile() adds a 'modal__content' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #show() displays the modal" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #show() returns a promise that resolves to the displayed element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #hide() hides the modal" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #hide() returns a promise that resolves to the hidden element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #toggle() alternates the modal displaying state" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #visible returns whether the modal is shown" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #onDeviceBackButton gets the callback" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #onDeviceBackButton returns nothing by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #onDeviceBackButton overwrites the callback" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #_ensureNodePosition() does not register extra element when has no parent ons-page" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #_ensureNodePosition() registers extra element when has parent ons-page" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #attributeChangedCallback() triggers 'onModifierChanged()' method" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #registerAnimator() throws an error if animator is not a ModalAnimator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsModalElement #registerAnimator() registers a new animator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsModalElement"/>
  <testcase name="OnsNavigatorElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement provides 'page' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #pages provides 'pages' property" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #pages should have one page after initialization" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #pushPage() adds a new page to the top of the page stack" time="0.03" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #pushPage() adds a new page to the top of the page stack using options.pageHTML" time="0.028" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #pushPage() only accepts object options" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #pushPage() is canceled if already performing another pushPage" time="0.025" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() only accepts object options" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() throws error if the stack is empty" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() removes the top page from the stack" time="0.071" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() is canceled if already performing another popPage" time="0.06" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() can refresh the previous page" time="0.093" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() throws error when refreshing pages directly inside the navigator" time="0.027" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() emits 'prepop' event" time="0.028" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() should be possible to cancel the 'prepop' event" time="0.025" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() emits 'postpop' event" time="0.06" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() emits 'show' event" time="0.06" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #popPage() returns a promise that resolves to the new top page" time="0.075" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() fallback to pushPage if the given page does not exist" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() does nothing when the page is already on top" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() brings the given pageUrl to the top" time="0.069" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() brings the given page index to the top" time="0.06" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() only accepts string or number as first parameter" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() throws error if the given index is not valid" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() only accepts object options" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() should be possible to cancel the 'prepush' event" time="0.033" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #bringPageTop() returns a promise that resolves to the new top page" time="0.094" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #insertPage() inserts a new page on a given index" time="0.031" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #insertPage() inserts a new page on a given index using `options.pageHTML`" time="0.026" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #insertPage() only accepts object options" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #insertPage() redirects to pushPage if the insertion is at the top" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #insertPage() normalizes the index" time="0.052" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #insertPage() returns a promise that resolves to the inserted page" time="0.044" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #replacePage() only accepts object options" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #replacePage() replaces the current page with a new one" time="0.059" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #replacePage() returns a promise that resolves to the new top page" time="0.058" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #resetToPage() only accepts object options" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #resetToPage() replaces all the page stack with only a new page" time="0.026" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #resetToPage() returns a promise that resolves to the new top page" time="0.029" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #topPage returns the current page" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #topPage throws error if page stack is empty" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #_destroy() destroys all the pages" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #_createPageElement() throws an error when no ons-page is provided" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #_onDeviceBackButton() pops a page if there are more than one" time="0.026" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #_onDeviceBackButton() calls event parent handler if there are less than two pages" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement propagate API fires 'show' event" time="0.024" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement propagate API fires 'hide' event" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement propagate API fires 'destroy' event" time="0.037" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #registerAnimator() throws an error if animator is not a NavigatorAnimator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #registerAnimator() registers a new animator" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #backButton should not display on first page" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #backButton should display button after push" time="0.022" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #backButton should display button after insert and hide after pop" time="0.019" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsNavigatorElement #backButton should display button after insert and hide after reset" time="0.038" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsNavigatorElement"/>
  <testcase name="OnsPageElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement has page class" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #attachedCallback() fires 'init' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #attachedCallback() consumes _skipinit attribute if present" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_tryToFillStatusBar() fills status bar" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #detachedCallback fires 'destroy' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #onDeviceBackButton sets the callback" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #onDeviceBackButton overwrites the callback" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #onDeviceBackButton is correctly deleted" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_getBackgroundElement() gets page__background" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_getBackgroundElement() throws page__background error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_getContentElement() throws page__content error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_canAnimateToolbar() works with normal toolbar" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_canAnimateToolbar() works with toolbar in page__content" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_getToolbarElement() returns the toolbar element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_registerToolbar() inserts toolbar as a child" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_registerToolbar() inserts toolbar as a child after status-bar-fill" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_getBottomToolbarElement() inserts bottomToolbar as a child" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #registerExtraElement() attaches a new child to the page" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #attributeChangedCallback() triggers 'onModifierChanged()' method" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #attributeChangedCallback() sets _onInfiniteScroll" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #attributeChangedCallback() infiniteScroll doesn't throw error until it's called" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_show() fires 'show' event" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_hide() fires 'hide' event" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement autoStyling adds 'material' modifier on Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement infiniteScroll throws error on invalid input" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement infiniteScroll calls onInfiniteScroll" time="0.051" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPageElement infiniteScroll waits for onInfiniteScroll to finish" time="0.3" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPageElement"/>
  <testcase name="OnsPopoverElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement provides 'modifier' attribute" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement should be hidden by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement elements has an element '_mask'" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement elements has an element '_popover'" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement elements has an element '_content'" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement elements has an element '_arrow'" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #onDeviceBackButton should hide the popover if it is cancelable" time="0.008" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #onDeviceBackButton should not hide the popover if it is not cancelable" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() throws an error when called with invalid targets" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() accepts an HTML element" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() accepts a CSS selector" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() accepts an Event object" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() has an 'animationOptions' parameter" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() returns a promise that resolves to the displayed element" time="0.025" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() 'preshow' event is fired" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() 'preshow' event can be cancelled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #show() 'postshow' event is fired" time="0.024" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #hide() hides the popover" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #hide() returns a promise that resolves to the hidden element" time="0.035" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #hide() 'prehide' event is fired" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #hide() 'prehide' event can be cancelled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #hide() 'posthide' event is fired" time="0.022" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #visible should return 'true' if popover is visible" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #visible should return 'false' if popover is not visible" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #_cancel() should hide the popover if it is not cancelable" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #_cancel() should hide the popover if it is cancelable" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement 'direction' attribute can have the value 'up'" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement 'direction' attribute can have the value 'down'" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement 'direction' attribute can have the value 'left'" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement 'direction' attribute can have the value 'right'" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement 'mask-color' attribute works" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #registerAnimator() throws an error if animator is not a PopoverAnimator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #registerAnimator() registers a new animator" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsPopoverElement autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPopoverElement"/>
  <testcase name="OnsProgressBarElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressBarElement provides modifier attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressBarElement #_updateDeterminate() is called when the &quot;indeterminate&quot; attribute is changed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressBarElement #_updateValue() is called when the &quot;value&quot; attribute is changed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressBarElement #_updateValue() is called when the &quot;secondary-value&quot; attribute is changed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressBarElement #_compile() is called when an element is created" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressBarElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressBarElement"/>
  <testcase name="OnsProgressCircularElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsProgressCircularElement provides modifier attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsProgressCircularElement #_updateDeterminate() is called when the &quot;indeterminate&quot; attribute is changed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsProgressCircularElement #_updateValue() is called when the &quot;value&quot; attribute is changed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsProgressCircularElement #_updateValue() is called when the &quot;secondary-value&quot; attribute is changed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsProgressCircularElement #_compile() is called when an element is created" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsProgressCircularElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsProgressCircularElement"/>
  <testcase name="OnsPullHookElement exists" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_createScrollElement() creates a scroll element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onScroll() resets the scroll if negative" time="0.009" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_generateTranslationTransform() returns a string" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDrag() does nothing if disabled" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDrag() does nothing if direction is horizontal" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDrag() translates the element" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDrag() translates the element when interimDirection is not 'down'" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDrag() changes the state" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDrag() bounces back if pull distance is higher than threshold" time="0.008" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDragStart() does nothing if the pull hook is disabled" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDragStart() saves the current scroll" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDragEnd() does nothing if the pull hook is disabled" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDragEnd() changes the state" time="0.007" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_onDragEnd() translates back" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_finish() calls the onAction if it exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_finish() translates to the pull hook when called" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_finish() changes the state" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #height is 64 by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #height changes the &quot;height&quot; attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #thresholdHeight is 96 by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #thresholdHeight changes the &quot;threshold-height&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_getState() returns the state" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #state returns the state" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_getCurrentScroll() returns the current page scroll" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #pullDistance returns the current translation" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #disabled changes the &quot;disabled&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_isContentFixed() returns true if the pull hook is fixed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_isContentFixed() returns false if the pull hook is not fixed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_getScrollableElement() returns itself if content is fixed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_getScrollableElement() returns another element if content is not fixed" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_getMinimumScroll() returns an integer" time="0.007" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsPullHookElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsPullHookElement"/>
  <testcase name="OnsRangeElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRangeElement"/>
  <testcase name="OnsRangeElement classList contains 'range' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRangeElement"/>
  <testcase name="OnsRangeElement provides 'modifier' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRangeElement"/>
  <testcase name="OnsRangeElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRangeElement"/>
  <testcase name="OnsRangeElement #disabled changes the &quot;disabled&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRangeElement"/>
  <testcase name="OnsRangeElement autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRangeElement"/>
  <testcase name="OnsRippleElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_compile() is called when an element is created" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_compile() is not called when an element is copied" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_compile() creates a &quot;wave&quot; element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_compile() creates a &quot;background&quot; element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #attributeChangedCallback() is called when an element is created" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #attributeChangedCallback() sets the color of the wave based on the &quot;color&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #attributeChangedCallback() sets the color of the background based on the &quot;color&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #attributeChangedCallback() sets the color of the background based on the &quot;background&quot; attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #attributeChangedCallback() disables background if the &quot;background&quot; attribute is &quot;none&quot;" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #attributeChangedCallback() makes sure the background is enabled if &quot;background != none&quot;" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_calculateCoords() can do math" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_calculateCoords() cares about it's center" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_rippleAnimation() changes the location of the wave" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_onTap() calls _rippleAnimation" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_onHold() sets _holding" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_onDragStart() calls _rippleAnimation" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_onDragStart() calls _onRelease" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRippleElement #_onRelease() unsets _holding" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRippleElement"/>
  <testcase name="OnsRowElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRowElement"/>
  <testcase name="OnsRowElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsRowElement"/>
  <testcase name="OnsSpeedDialItemElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialItemElement"/>
  <testcase name="OnsSpeedDialItemElement provides modifier attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialItemElement"/>
  <testcase name="OnsSpeedDialItemElement #_onClick() should stop propagation" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialItemElement"/>
  <testcase name="OnsSpeedDialItemElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialItemElement"/>
  <testcase name="OnsSpeedDialItemElement autoStyling adds 'material' effects on Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialItemElement"/>
  <testcase name="OnsSpeedDialElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement provides modifier attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #items should be a list of OnsSpeedDialItemElement" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_onClick() should call #toggleItems()" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_show() does nothing if element is inline" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_show() calls show() if element is not inline" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_hide() does nothing if element is inline" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_hide() calls hide() if element is not inline" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updateDirection() is called when element is created" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updateDirection() is called with the value of the direction attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updateDirection() is called when direction changes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updateDirection() sets the position of the items" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updateDirection() throws an error if the argument is incorrect" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updatePosition() is called when the &quot;position&quot; attribute changes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updatePosition() adds the correct class" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_updatePosition() does nothing if position &quot;attribute&quot; is incorrect" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #show() calls #show() on the child OnsFabElement" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #hide() calls #hideItems()" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #hide() eventually calls #hide() on the child OnsFabElement" time="0.2" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #showItems() sets scale transform to 1 for all items" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #hideItems() sets scale transform to 0 for all items" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #set disabled() disables it's direct fab element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #visible returns whether the element is currently shown or not" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #toggle() calls #show() if element is hidden" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #toggle() calls #hide() if element is shown" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #toggleItems() calls #showItems() if items are hidden" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #toggleItems() calls #hideItems() if items are shown" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #isOpen() returns whether the menu is open or not." time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="OnsSpeedDialElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSpeedDialElement"/>
  <testcase name="ons-splitter-content provides 'OnsSplitterContentElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-splitter-content"/>
  <testcase name="ons-splitter-content provides _hide(), _show(), _destroy() methods" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-splitter-content"/>
  <testcase name="ons-splitter-content child elements should pass though child nodes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-splitter-content"/>
  <testcase name="ons-splitter-content #load() returns a promise that resolves to the new page element" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-splitter-content"/>
  <testcase name="ons-splitter-content #page should return current page url" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-splitter-content"/>
  <testcase name="OnsSplitterMaskElement exists" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterMaskElement"/>
  <testcase name="OnsSplitterSideElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement provides _hide(), _show(), _destroy() methods" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #load() returns a promise that resolves to the new page element" time="0.005" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #open() should open ons-splitter-side" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #close() should close ons-splitter-side" time="0.027" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #isOpen should return boolean" time="0.01" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #toggle() toggle open or close state" time="0.008" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #handleGesture() should ignore scrolling" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterSideElement #handleGesture() should ignore drags outside the target area" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterSideElement"/>
  <testcase name="OnsSplitterElement exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement provides _hide(), _show(), _destroy() methods" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement page lifecycle events propagation should trigger &quot;init&quot; lifecyle event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement page lifecycle events propagation should trigger &quot;show&quot; lifecyle event" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement children elements has a #left element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement children elements has a #right element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement children elements has a #content element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement children elements has a #mask element" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSplitterElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSplitterElement"/>
  <testcase name="OnsSwitchElement exists" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement classList contains 'switch' by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement has an 'input' child by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement has a '.switch__toggle' child by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement provides 'modifier' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked is a boolean" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked adds the 'checked' attribute when set to true" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked removes the 'checked' attribute when set to false" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked accepts truthy and falsy values" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #disabled adds the 'disabled' attribute when set to true" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #disabled removes the 'disabled' attribute when set to false" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #disabled changes the 'disabled' property of it's checkbox" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked adds the 'checked' attribute when set to true" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked removes the 'checked' attribute when set to false" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #checked changes the 'checked' property of it's checkbox" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #_onChange() adds the 'checked' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #_onChange() removes the 'checked' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #click() changes the value of the checkbox" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #click() cares if it's disabled" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #attributeChangedCallback() toggles material design" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #attributeChangedCallback() checks the checkbox" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #attributeChangedCallback() disables the checkbox" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement #attributeChangedCallback() changes the inner input ID" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsSwitchElement autoStyling adds 'material' modifier on Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsSwitchElement"/>
  <testcase name="OnsTabElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement has a default template" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement modifier attribute modifies the classList of the tab" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement active attribute sets whether a tab should be active or not" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement icon attribute sets icon name for the tab" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement label attribute sets label name for the tab" time="0.006" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement children are, by default, two" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement parent should be an 'ons-tabbar' element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement _hasDefaultTemplate property is, by default, true" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement _hasDefaultTemplate property is false when one of the tab's children is a ELEMENT_NODE" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement #_updateDefaultTemplate() will return if there is not a default template" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement #_loadPage() returns the current tab _pageElement" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement #setActive() will set the tab as active" time="0.01" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabElement autoStyling adds 'material' modifiers and effects on Android" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabElement"/>
  <testcase name="OnsTabbarElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement provides 'modifier' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement has 'position' attribute" time="0.013" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement has two children by default" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #getTabbarId() provides a unique auto generated id" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setTabbarVisibility() sets the element visible or invisible" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #_getCurrentPageElement() accepts only 'ons-page' as current page element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #getActiveTabIndex() has active tab property" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement events fires 'prechange' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement events fires 'postchange' event" time="0.027" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement events fires 'reactive' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement propagate API fires 'init' event" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement propagate API fires 'show' event" time="0.019" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement propagate API fires 'hide' event" time="0.02" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #loadPage() loads a page" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #loadPage() returns a promise that resolves to the new page" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setActiveTab() loads any tab as persistent" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setActiveTab() rejects the promise if index does not exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setActiveTab() can be canceled" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setActiveTab() does not remove tabs" time="0.018" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setActiveTab() keeps the page when option 'keepPage' is true" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #setActiveTab() returns a promise that resolves to the new page" time="0.018" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #_compile() fills status bar - true" time="0.201" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #_compile() fills status bar - false" time="0.2" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #_compile() does not compile twice" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #registerAnimator() throws an error if animator is not a TabbarAnimator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement #registerAnimator() registers a new animator" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="OnsTabbarElement autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsTabbarElement"/>
  <testcase name="ons-template provides 'OnsTemplateElement' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-template"/>
  <testcase name="ons-template doesn't have any children" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-template"/>
  <testcase name="ons-template has a 'createdCallback()' function" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-template"/>
  <testcase name="ons-template #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-template"/>
  <testcase name="ons-toolbar-button provides 'OnsToolbarButton' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-toolbar-button"/>
  <testcase name="ons-toolbar-button provides modifier attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-toolbar-button"/>
  <testcase name="ons-toolbar-button #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-toolbar-button"/>
  <testcase name="ons-toolbar-button #disabled changes the &quot;disabled&quot; attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-toolbar-button"/>
  <testcase name="ons-toolbar-button autoStyling adds 'material' modifiers and effects on Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-toolbar-button"/>
  <testcase name="OnsToolbarElement should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement provides 'modifier' attribute" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement has 'left' class value in its first child" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement has 'center' class value in its second child" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement has 'right' class value in its third child" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement #attachedCallbad() does not register extra element when has no parent ons-page" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement #_compile() removes non-element children" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement #_compile() sorts its children depending on their class" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement #_compile() does not compile twice" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="OnsToolbarElement autoStyling adds 'material' modifier on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).OnsToolbarElement"/>
  <testcase name="ons._animationOptionsParser exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons._animationOptionsParser"/>
  <testcase name="ons._animationOptionsParser parses valid strings" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons._animationOptionsParser"/>
  <testcase name="ons._animationOptionsParser parses HTML attributes" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons._animationOptionsParser"/>
  <testcase name="ons._animationOptionsParser throws error when the string is invalid" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons._animationOptionsParser"/>
  <testcase name="ons._autoStyle exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons._autoStyle"/>
  <testcase name="ons._autoStyle adds 'material' modifiers and effects on Android" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons._autoStyle"/>
  <testcase name="content-ready should exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).content-ready"/>
  <testcase name="content-ready should work normally on an element have single text node" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).content-ready"/>
  <testcase name="content-ready should work normally on an element have empty contents" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).content-ready"/>
  <testcase name="content-ready should consume callbacks orderly" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).content-ready"/>
  <testcase name="deviceBackButtonDispatcher #createHandler() throws an error if the first parameter is not an HTMLElement" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).deviceBackButtonDispatcher"/>
  <testcase name="deviceBackButtonDispatcher #createHandler() throws an error if the first parameter is not a function" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).deviceBackButtonDispatcher"/>
  <testcase name="deviceBackButtonDispatcher #createHandler() disables the handler" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).deviceBackButtonDispatcher"/>
  <testcase name="deviceBackButtonDispatcher #_callback() default exits the app" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).deviceBackButtonDispatcher"/>
  <testcase name="deviceBackButtonDispatcher #fireDeviceBackButtonEvent() fires 'backbutton' event" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).deviceBackButtonDispatcher"/>
  <testcase name="LazyRepeatDelegate #constructor() requires userDelegate to be an _actual_ object" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #prepareItem() throws an error when there is no function to call" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #prepareItem() works when defined later" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #countItems() throws an error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #calculateItemHeight() throws an error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #updateItem() doesn't throw an error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #destroyItem() doesn't throw an error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatDelegate #destroy() doesn't throw an error" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatDelegate"/>
  <testcase name="LazyRepeatProvider #constructor() throws error if 'delegate' is not a LazyRepeatDelegate" time="0.021" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #constructor() throws error if 'wrapperElement' is not an Element" time="0.017" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #constructor() throws error if 'wrapperElement' is not a descendant of OnsPageElement" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_countItems() returns the number of items" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_getItemHeight() returns the item height" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_checkItemHeight() sets _itemHeight" time="0.005" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_onChange() calls '_render()'" time="0.008" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_render() removes items that are not in view" time="0.016" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_renderElement() calls 'updateItem()' if it is already rendered" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_renderElement() calls 'prepareItem()' if it is not already rendered" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_removeElement() calls 'destroyItem()'" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #_removeAllElements removes all elements" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="LazyRepeatProvider #destroy() calls the 'destroy()' method" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).LazyRepeatProvider"/>
  <testcase name="modifier provide 'ons._internal.ModifierUtil' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).modifier"/>
  <testcase name="modifier .diff() should calculate modifier diff" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).modifier"/>
  <testcase name="ons.notification exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #alert() requires a message" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #alert() accepts a 'messageHTML' parameter" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #alert() displays an alert dialog" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #alert() accepts a 'modifier' parameter" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #alert() hides the dialog when a button is clicked" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #alert() resolves to the pressed button index" time="0.046" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() requires a message" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() accepts a 'messageHTML' parameter" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() displays an alert dialog" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() accepts a 'modifier' parameter" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() hides the dialog when a button is clicked" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() accepts a 'cancelable' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #confirm() resolves to the pressed button index" time="0.051" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() requires a message" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() accepts a 'messageHTML' parameter" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() displays an alert dialog" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() accepts a 'modifier' parameter" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() accepts a 'submitOnEnter' parameter" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() hides the dialog when a button is clicked" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() accepts a 'cancelable' attribute" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification #prompt() resolves to the input value" time="0.027" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification autoStyling adds 'material' modifier on Android" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons.notification autoStyling removes 'material' modifier on iOS" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.notification"/>
  <testcase name="ons #disableAutoStatusBarFill() sets autoStatusBarFill to false" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #disableAutoStatusBarFill() throws an error if ons is ready" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #disableDeviceBackButtonHandler() disables the device back button" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #enableDeviceBackButtonHandler() enables the device back button" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #setDefaultDeviceBackButtonListener() changes the default callback" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #enableAutoStatusBarFill() sets autoStatusBarFill to true" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #enableAutoStatusBarFill() throws an error if ons is ready" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #enableAnimations() enables animations" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createPopover() throws error when no page is provided" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createPopover() calls the linking function" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createPopover() returns a valid popover element" time="0.004" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createDialog() throws error when no page is provided" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createDialog() calls the linking function" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createDialog() returns a valid dialog element" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createAlertDialog() throws error when no page is provided" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createAlertDialog() calls the linking function" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #createAlertDialog() returns a valid alertDialog element" time="0.003" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #resolveLoadingPlaceholder() resolves the placeholder" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons #_setupLoadingPlaceHolders() resolves the placeholder" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons"/>
  <testcase name="ons.pageAttributeExpression #defineVariable() should define a variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #defineVariable() must have a string as &quot;name&quot; argument." time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #defineVariable() must have a function or string as &quot;value&quot; argument" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #defineVariable() can only overwrite variables if &quot;overwrite&quot; argument is true" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #removeVariable() removes a variables" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #getAllVariables() returns all variables" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_parsePart() requires a string with length more than 0" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_parsePart() does not support nested interpolation" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_parsePart() requires } to be preceeded by ${" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_parsePart() requires all interpolations to be terminated" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_parsePart() returns an Array" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_parsePart() splits the string into tokens" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_replaceToken() does not replace if the token is not in the form &quot;${name}&quot;" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_replaceToken() throws an error if the variable does not exist" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_replaceToken() throws an error if the variable is a function and it does not return a string." time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_replaceToken() replaces the token" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #_replaceToken() supports leading and trailing whitespaces for the variable name" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() returns an Array" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() returns a list of pages" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() replaces ${hoge} with the value of &quot;hoge&quot;" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() replaces ${foo} with the return volue of &quot;foo&quot;" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() supports multiple interpolations in one string" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() supports leading and trailing whitespaces" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.pageAttributeExpression #evaluate() requires a valid string" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.pageAttributeExpression"/>
  <testcase name="ons.platform exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #select() sets the render platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isWebView() return false if platform is not a WebView" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIOS() returns false if platform is not IOS" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIOS() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isAndroid() returns false if platform is not Android" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isAndroid() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isAndroidPhone() returns false if platform is not an Android Phone" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isAndroidTablet() returns false if platform is not an Android Tablet" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isWP() returns false if platform is not WP" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isWP() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIPhone() returns false if platform is iPhone" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIPad() returns false if platform is iPad" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isBlackBerry() returns false if platform is not BlackBerry" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isBlackBerry() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isOpera() returns false if platform is not Opera" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isOpera() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isFirefox() returns false if platform is not Firefox" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isFirefox() supports forcing the platform" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isSafari() returns false if platform is not Safari" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isSafari() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isChrome() returns true if platform is Chrome" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isChrome() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIE() returns false if platform is not IE" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIE() supports forcing the platform" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons.platform #isIOS7above() returns false if platform is not iOS 7 or above" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons.platform"/>
  <testcase name="ons-util provide 'ons._util' global variable" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #parseJSONObjectSafely should parse normal JSON" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #parseJSONObjectSafely should parse broken JSON" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated exists" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works for basic cases" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with built-in prototypes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with array of types" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with custom prototypes" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with options object" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with functions - options.safeCall" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with functions - options.returns" time="0" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with functions - options.dynamicCall" time="0.002" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <testcase name="ons-util #validated works with complex objects - options.object" time="0.001" classname="Chromium_50_0_2661_(Ubuntu_0_0_0).ons-util"/>
  <system-out>
    <![CDATA[
]]>
  </system-out>
  <system-err/>
</testsuite>
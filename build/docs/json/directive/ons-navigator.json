{
  "fileInfo": {
    "baseName": "navigator",
    "extension": "js"
  },
  "startingLine": 1,
  "endingLine": 52,
  "codeAncestors": [],
  "docType": "directive",
  "tags": {
    "tags": [
      {
        "tagDef": {
          "name": "ngdoc",
          "required": true,
          "docProperty": "docType"
        },
        "tagName": "ngdoc",
        "description": "directive",
        "startingLine": 1
      },
      {
        "tagDef": {
          "name": "id"
        },
        "tagName": "id",
        "description": "navigator",
        "startingLine": 2
      },
      {
        "tagDef": {
          "name": "name",
          "required": true
        },
        "tagName": "name",
        "description": "ons-navigator",
        "startingLine": 3
      },
      {
        "tagDef": {
          "name": "category",
          "multi": true,
          "docProperty": "categories"
        },
        "tagName": "category",
        "description": "navigation",
        "startingLine": 4
      },
      {
        "tagDef": {
          "name": "description"
        },
        "tagName": "description",
        "description": "  [en]A component that provides page stack management and navigation. This component does not have a visible content.[/en]\n  [ja]ページスタックの管理とナビゲーション機能を提供するコンポーネント。画面上への出力はありません。[/ja]",
        "startingLine": 5
      },
      {
        "tagDef": {
          "name": "codepen"
        },
        "tagName": "codepen",
        "description": "yrhtv",
        "startingLine": 8
      },
      {
        "tagDef": {
          "name": "guide",
          "multi": true,
          "docProperty": "guides"
        },
        "tagName": "guide",
        "description": "PageNavigation\n  [en]Guide for page navigation[/en]\n  [ja]ページナビゲーションの概要[/ja]",
        "startingLine": 9
      },
      {
        "tagDef": {
          "name": "guide",
          "multi": true,
          "docProperty": "guides"
        },
        "tagName": "guide",
        "description": "CallingComponentAPIsfromJavaScript\n  [en]Using navigator from JavaScript[/en]\n  [ja]JavaScriptからコンポーネントを呼び出す[/ja]",
        "startingLine": 12
      },
      {
        "tagDef": {
          "name": "guide",
          "multi": true,
          "docProperty": "guides"
        },
        "tagName": "guide",
        "description": "EventHandling\n  [en]Event handling descriptions[/en]\n  [ja]イベント処理の使い方[/ja]",
        "startingLine": 15
      },
      {
        "tagDef": {
          "name": "guide",
          "multi": true,
          "docProperty": "guides"
        },
        "tagName": "guide",
        "description": "DefiningMultiplePagesinSingleHTML\n  [en]Defining multiple pages in single html[/en]\n  [ja]複数のページを1つのHTMLに記述する[/ja]",
        "startingLine": 18
      },
      {
        "tagDef": {
          "name": "seealso",
          "multi": true,
          "docProperty": "seealsos"
        },
        "tagName": "seealso",
        "description": "ons-toolbar\n  [en]ons-toolbar component[/en]\n  [ja]ons-toolbarコンポーネント[/ja]",
        "startingLine": 21
      },
      {
        "tagDef": {
          "name": "seealso",
          "multi": true,
          "docProperty": "seealsos"
        },
        "tagName": "seealso",
        "description": "ons-back-button\n  [en]ons-back-button component[/en]\n  [ja]ons-back-buttonコンポーネント[/ja]",
        "startingLine": 24
      },
      {
        "tagDef": {
          "name": "example",
          "multi": true,
          "docProperty": "examples"
        },
        "tagName": "example",
        "description": "<ons-navigator animation=\"slide\" var=\"app.navi\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.pushPage('page.html');\">Push</ons-button>\n    </p>\n  </ons-page>\n</ons-navigator>\n\n<ons-template id=\"page.html\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.popPage();\">Pop</ons-button>\n    </p>\n  </ons-page>\n</ons-template>",
        "startingLine": 27
      }
    ],
    "tagsByName": {
      "obj": {
        "ngdoc": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "directive",
            "startingLine": 1
          }
        ],
        "id": [
          {
            "tagDef": {
              "name": "id"
            },
            "tagName": "id",
            "description": "navigator",
            "startingLine": 2
          }
        ],
        "name": [
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-navigator",
            "startingLine": 3
          }
        ],
        "category": [
          {
            "tagDef": {
              "name": "category",
              "multi": true,
              "docProperty": "categories"
            },
            "tagName": "category",
            "description": "navigation",
            "startingLine": 4
          }
        ],
        "description": [
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]A component that provides page stack management and navigation. This component does not have a visible content.[/en]\n  [ja]ページスタックの管理とナビゲーション機能を提供するコンポーネント。画面上への出力はありません。[/ja]",
            "startingLine": 5
          }
        ],
        "codepen": [
          {
            "tagDef": {
              "name": "codepen"
            },
            "tagName": "codepen",
            "description": "yrhtv",
            "startingLine": 8
          }
        ],
        "guide": [
          {
            "tagDef": {
              "name": "guide",
              "multi": true,
              "docProperty": "guides"
            },
            "tagName": "guide",
            "description": "PageNavigation\n  [en]Guide for page navigation[/en]\n  [ja]ページナビゲーションの概要[/ja]",
            "startingLine": 9
          },
          {
            "tagDef": {
              "name": "guide",
              "multi": true,
              "docProperty": "guides"
            },
            "tagName": "guide",
            "description": "CallingComponentAPIsfromJavaScript\n  [en]Using navigator from JavaScript[/en]\n  [ja]JavaScriptからコンポーネントを呼び出す[/ja]",
            "startingLine": 12
          },
          {
            "tagDef": {
              "name": "guide",
              "multi": true,
              "docProperty": "guides"
            },
            "tagName": "guide",
            "description": "EventHandling\n  [en]Event handling descriptions[/en]\n  [ja]イベント処理の使い方[/ja]",
            "startingLine": 15
          },
          {
            "tagDef": {
              "name": "guide",
              "multi": true,
              "docProperty": "guides"
            },
            "tagName": "guide",
            "description": "DefiningMultiplePagesinSingleHTML\n  [en]Defining multiple pages in single html[/en]\n  [ja]複数のページを1つのHTMLに記述する[/ja]",
            "startingLine": 18
          }
        ],
        "seealso": [
          {
            "tagDef": {
              "name": "seealso",
              "multi": true,
              "docProperty": "seealsos"
            },
            "tagName": "seealso",
            "description": "ons-toolbar\n  [en]ons-toolbar component[/en]\n  [ja]ons-toolbarコンポーネント[/ja]",
            "startingLine": 21
          },
          {
            "tagDef": {
              "name": "seealso",
              "multi": true,
              "docProperty": "seealsos"
            },
            "tagName": "seealso",
            "description": "ons-back-button\n  [en]ons-back-button component[/en]\n  [ja]ons-back-buttonコンポーネント[/ja]",
            "startingLine": 24
          }
        ],
        "example": [
          {
            "tagDef": {
              "name": "example",
              "multi": true,
              "docProperty": "examples"
            },
            "tagName": "example",
            "description": "<ons-navigator animation=\"slide\" var=\"app.navi\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.pushPage('page.html');\">Push</ons-button>\n    </p>\n  </ons-page>\n</ons-navigator>\n\n<ons-template id=\"page.html\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.popPage();\">Pop</ons-button>\n    </p>\n  </ons-page>\n</ons-template>",
            "startingLine": 27
          }
        ]
      },
      "hasProto": false
    },
    "badTags": [],
    "description": ""
  },
  "codepen": {
    "id": "yrhtv",
    "isWide": false
  },
  "guides": [
    {
      "name": "PageNavigation\n",
      "description": " [en]Guide for page navigation[/en]\n  [ja]ページナビゲーションの概要[/ja]"
    },
    {
      "name": "CallingComponentAPIsfromJavaScript\n",
      "description": " [en]Using navigator from JavaScript[/en]\n  [ja]JavaScriptからコンポーネントを呼び出す[/ja]"
    },
    {
      "name": "EventHandling\n",
      "description": " [en]Event handling descriptions[/en]\n  [ja]イベント処理の使い方[/ja]"
    },
    {
      "name": "DefiningMultiplePagesinSingleHTML\n",
      "description": " [en]Defining multiple pages in single html[/en]\n  [ja]複数のページを1つのHTMLに記述する[/ja]"
    }
  ],
  "seealsos": [
    {
      "name": "ons-toolbar\n",
      "description": " [en]ons-toolbar component[/en]\n  [ja]ons-toolbarコンポーネント[/ja]"
    },
    {
      "name": "ons-back-button\n",
      "description": " [en]ons-back-button component[/en]\n  [ja]ons-back-buttonコンポーネント[/ja]"
    }
  ],
  "categories": [
    "navigation"
  ],
  "id": "navigator",
  "example": "<ons-navigator animation=\"slide\" var=\"app.navi\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.pushPage('page.html');\">Push</ons-button>\n    </p>\n  </ons-page>\n</ons-navigator>\n\n<ons-template id=\"page.html\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.popPage();\">Pop</ons-button>\n    </p>\n  </ons-page>\n</ons-template>",
  "name": "ons-navigator",
  "description": "[en]A component that provides page stack management and navigation. This component does not have a visible content.[/en]\n  [ja]ページスタックの管理とナビゲーション機能を提供するコンポーネント。画面上への出力はありません。[/ja]",
  "area": "api",
  "module": "..",
  "restrict": {
    "element": false,
    "attribute": true,
    "cssClass": false,
    "comment": false
  },
  "examples": [
    "<ons-navigator animation=\"slide\" var=\"app.navi\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.pushPage('page.html');\">Push</ons-button>\n    </p>\n  </ons-page>\n</ons-navigator>\n\n<ons-template id=\"page.html\">\n  <ons-page>\n    <ons-toolbar>\n      <div class=\"center\">Title</div>\n    </ons-toolbar>\n\n    <p style=\"text-align: center\">\n      <ons-button modifier=\"light\" ng-click=\"app.navi.popPage();\">Pop</ons-button>\n    </p>\n  </ons-page>\n</ons-template>"
  ],
  "element": "ANY",
  "priority": 0,
  "codeName": null,
  "events": [
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 54,
      "endingLine": 70,
      "codeAncestors": [],
      "docType": "event",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "event",
            "startingLine": 54
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "prepush",
            "startingLine": 55
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Fired just before a page is pushed.[/en]\n  [ja]pageがpushされる直前に発火されます。[/ja]",
            "startingLine": 56
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Event object.[/en]",
            "startingLine": 59,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
            "startingLine": 60,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.navigator"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
            "startingLine": 63,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.currentPage"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Call this function to cancel the push.[/en]\n  [ja]この関数を呼び出すと、push処理がキャンセルされます。[/ja]",
            "startingLine": 66,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "event.cancel"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "event",
                "startingLine": 54
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "prepush",
                "startingLine": 55
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Fired just before a page is pushed.[/en]\n  [ja]pageがpushされる直前に発火されます。[/ja]",
                "startingLine": 56
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Event object.[/en]",
                "startingLine": 59,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
                "startingLine": 60,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.navigator"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
                "startingLine": 63,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.currentPage"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Call this function to cancel the push.[/en]\n  [ja]この関数を呼び出すと、push処理がキャンセルされます。[/ja]",
                "startingLine": 66,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "event.cancel"
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "prepush",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Event object.[/en]",
          "startingLine": 59,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
          "startingLine": 60,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.navigator"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
          "startingLine": 63,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.currentPage"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Call this function to cancel the push.[/en]\n  [ja]この関数を呼び出すと、push処理がキャンセルされます。[/ja]",
          "startingLine": 66,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "event.cancel"
        }
      ],
      "description": "[en]Fired just before a page is pushed.[/en]\n  [ja]pageがpushされる直前に発火されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 72,
      "endingLine": 88,
      "codeAncestors": [],
      "docType": "event",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "event",
            "startingLine": 72
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "prepop",
            "startingLine": 73
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Fired just before a page is popped.[/en]\n  [ja]pageがpopされる直前に発火されます。[/ja]",
            "startingLine": 74
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Event object.[/en]",
            "startingLine": 77,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
            "startingLine": 78,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.navigator"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
            "startingLine": 81,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.currentPage"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Call this function to cancel the pop.[/en]\n  [ja]この関数を呼び出すと、pageのpopがキャンセルされます。[/ja]",
            "startingLine": 84,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "event.cancel"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "event",
                "startingLine": 72
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "prepop",
                "startingLine": 73
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Fired just before a page is popped.[/en]\n  [ja]pageがpopされる直前に発火されます。[/ja]",
                "startingLine": 74
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Event object.[/en]",
                "startingLine": 77,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
                "startingLine": 78,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.navigator"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
                "startingLine": 81,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.currentPage"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Call this function to cancel the pop.[/en]\n  [ja]この関数を呼び出すと、pageのpopがキャンセルされます。[/ja]",
                "startingLine": 84,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "event.cancel"
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "prepop",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Event object.[/en]",
          "startingLine": 77,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
          "startingLine": 78,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.navigator"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
          "startingLine": 81,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.currentPage"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Call this function to cancel the pop.[/en]\n  [ja]この関数を呼び出すと、pageのpopがキャンセルされます。[/ja]",
          "startingLine": 84,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "event.cancel"
        }
      ],
      "description": "[en]Fired just before a page is popped.[/en]\n  [ja]pageがpopされる直前に発火されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 90,
      "endingLine": 106,
      "codeAncestors": [],
      "docType": "event",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "event",
            "startingLine": 90
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "postpush",
            "startingLine": 91
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Fired just after a page is pushed.[/en]\n  [ja]pageがpushされてアニメーションが終了してから発火されます。[/ja]",
            "startingLine": 92
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Event object.[/en]",
            "startingLine": 95,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
            "startingLine": 96,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.navigator"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Object of the next page.[/en]\n  [ja]pushされたpageオブジェクト。[/ja]",
            "startingLine": 99,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.enterPage"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Object of the previous page.[/en]\n  [ja]以前のpageオブジェクト。[/ja]",
            "startingLine": 102,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.leavePage"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "event",
                "startingLine": 90
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "postpush",
                "startingLine": 91
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Fired just after a page is pushed.[/en]\n  [ja]pageがpushされてアニメーションが終了してから発火されます。[/ja]",
                "startingLine": 92
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Event object.[/en]",
                "startingLine": 95,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
                "startingLine": 96,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.navigator"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Object of the next page.[/en]\n  [ja]pushされたpageオブジェクト。[/ja]",
                "startingLine": 99,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.enterPage"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Object of the previous page.[/en]\n  [ja]以前のpageオブジェクト。[/ja]",
                "startingLine": 102,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.leavePage"
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "postpush",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Event object.[/en]",
          "startingLine": 95,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
          "startingLine": 96,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.navigator"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Object of the next page.[/en]\n  [ja]pushされたpageオブジェクト。[/ja]",
          "startingLine": 99,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.enterPage"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Object of the previous page.[/en]\n  [ja]以前のpageオブジェクト。[/ja]",
          "startingLine": 102,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.leavePage"
        }
      ],
      "description": "[en]Fired just after a page is pushed.[/en]\n  [ja]pageがpushされてアニメーションが終了してから発火されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 108,
      "endingLine": 124,
      "codeAncestors": [],
      "docType": "event",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "event",
            "startingLine": 108
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "postpop",
            "startingLine": 109
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Fired just after a page is popped.[/en]\n  [ja]pageがpopされてアニメーションが終わった後に発火されます。[/ja]",
            "startingLine": 110
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Event object.[/en]",
            "startingLine": 113,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
            "startingLine": 114,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.navigator"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Object of the next page.[/en]\n  [ja]popされて表示されるページのオブジェクト。[/ja]",
            "startingLine": 117,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.enterPage"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Object of the previous page.[/en]\n  [ja]popされて消えるページのオブジェクト。[/ja]",
            "startingLine": 120,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.leavePage"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "event",
                "startingLine": 108
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "postpop",
                "startingLine": 109
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Fired just after a page is popped.[/en]\n  [ja]pageがpopされてアニメーションが終わった後に発火されます。[/ja]",
                "startingLine": 110
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Event object.[/en]",
                "startingLine": 113,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
                "startingLine": 114,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.navigator"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Object of the next page.[/en]\n  [ja]popされて表示されるページのオブジェクト。[/ja]",
                "startingLine": 117,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.enterPage"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Object of the previous page.[/en]\n  [ja]popされて消えるページのオブジェクト。[/ja]",
                "startingLine": 120,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.leavePage"
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "postpop",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Event object.[/en]",
          "startingLine": 113,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
          "startingLine": 114,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.navigator"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Object of the next page.[/en]\n  [ja]popされて表示されるページのオブジェクト。[/ja]",
          "startingLine": 117,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.enterPage"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Object of the previous page.[/en]\n  [ja]popされて消えるページのオブジェクト。[/ja]",
          "startingLine": 120,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.leavePage"
        }
      ],
      "description": "[en]Fired just after a page is popped.[/en]\n  [ja]pageがpopされてアニメーションが終わった後に発火されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    }
  ],
  "methods": [
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 254,
      "endingLine": 275,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 254
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "pushPage(pageUrl, [options])",
            "startingLine": 255
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Page URL. Can be either a HTML document or a <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
            "startingLine": 256,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "pageUrl"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
            "startingLine": 259,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "options",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
            "startingLine": 262,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animation",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
            "startingLine": 265,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animationOptions",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 268,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "options.onTransitionEnd",
            "optional": true
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Pushes the specified pageUrl into the page stack.[/en]\n  [ja]指定したpageUrlを新しいページスタックに追加します。新しいページが表示されます。[/ja]",
            "startingLine": 271
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 254
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "pushPage(pageUrl, [options])",
                "startingLine": 255
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Page URL. Can be either a HTML document or a <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
                "startingLine": 256,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "pageUrl"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
                "startingLine": 259,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "options",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
                "startingLine": 262,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animation",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
                "startingLine": 265,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animationOptions",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 268,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "options.onTransitionEnd",
                "optional": true
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Pushes the specified pageUrl into the page stack.[/en]\n  [ja]指定したpageUrlを新しいページスタックに追加します。新しいページが表示されます。[/ja]",
                "startingLine": 271
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "pushPage(pageUrl, [options])",
                "startingLine": 255
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "pushPage(pageUrl, [options])",
      "name": "pushPage",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Page URL. Can be either a HTML document or a <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
          "startingLine": 256,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "pageUrl"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
          "startingLine": 259,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "options",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
          "startingLine": 262,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animation",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
          "startingLine": 265,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animationOptions",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 268,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "options.onTransitionEnd",
          "optional": true
        }
      ],
      "description": "[en]Pushes the specified pageUrl into the page stack.[/en]\n  [ja]指定したpageUrlを新しいページスタックに追加します。新しいページが表示されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 277,
      "endingLine": 298,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 277
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "bringPageTop(item, [options])",
            "startingLine": 278
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Page URL or index of an existing page in navigator's stack.[/en]\n  [ja]ページのURLかもしくはons-navigatorのページスタックのインデックス値を指定します。[/ja]",
            "startingLine": 279,
            "typeExpression": "String|Number",
            "type": {
              "type": "TypeUnion",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "String"
                },
                {
                  "type": "NameExpression",
                  "name": "Number"
                }
              ]
            },
            "typeList": [
              "String",
              "Number"
            ],
            "name": "item"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
            "startingLine": 282,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "options",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
            "startingLine": 285,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animation",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
            "startingLine": 288,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animationOptions",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 291,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "options.onTransitionEnd",
            "optional": true
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Brings the given page to the top of the page-stack if already exists or pushes it into the stack if doesn't.[/en]\n  [ja]指定したページをページスタックの一番上に移動します。もし指定したページが無かった場合新しくpushされます。[/ja]",
            "startingLine": 294
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 277
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "bringPageTop(item, [options])",
                "startingLine": 278
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Page URL or index of an existing page in navigator's stack.[/en]\n  [ja]ページのURLかもしくはons-navigatorのページスタックのインデックス値を指定します。[/ja]",
                "startingLine": 279,
                "typeExpression": "String|Number",
                "type": {
                  "type": "TypeUnion",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "String"
                    },
                    {
                      "type": "NameExpression",
                      "name": "Number"
                    }
                  ]
                },
                "typeList": [
                  "String",
                  "Number"
                ],
                "name": "item"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
                "startingLine": 282,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "options",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
                "startingLine": 285,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animation",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
                "startingLine": 288,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animationOptions",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 291,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "options.onTransitionEnd",
                "optional": true
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Brings the given page to the top of the page-stack if already exists or pushes it into the stack if doesn't.[/en]\n  [ja]指定したページをページスタックの一番上に移動します。もし指定したページが無かった場合新しくpushされます。[/ja]",
                "startingLine": 294
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "bringPageTop(item, [options])",
                "startingLine": 278
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "bringPageTop(item, [options])",
      "name": "bringPageTop",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Page URL or index of an existing page in navigator's stack.[/en]\n  [ja]ページのURLかもしくはons-navigatorのページスタックのインデックス値を指定します。[/ja]",
          "startingLine": 279,
          "typeExpression": "String|Number",
          "type": {
            "type": "TypeUnion",
            "elements": [
              {
                "type": "NameExpression",
                "name": "String"
              },
              {
                "type": "NameExpression",
                "name": "Number"
              }
            ]
          },
          "typeList": [
            "String",
            "Number"
          ],
          "name": "item"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
          "startingLine": 282,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "options",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
          "startingLine": 285,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animation",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
          "startingLine": 288,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animationOptions",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 291,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "options.onTransitionEnd",
          "optional": true
        }
      ],
      "description": "[en]Brings the given page to the top of the page-stack if already exists or pushes it into the stack if doesn't.[/en]\n  [ja]指定したページをページスタックの一番上に移動します。もし指定したページが無かった場合新しくpushされます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 300,
      "endingLine": 318,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 300
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "insertPage(index, pageUrl, [options])",
            "startingLine": 301
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]The index where it should be inserted.[/en]\n  [ja]スタックに挿入する位置のインデックスを指定します。[/ja]",
            "startingLine": 302,
            "typeExpression": "Number",
            "type": {
              "type": "NameExpression",
              "name": "Number"
            },
            "typeList": [
              "Number"
            ],
            "name": "index"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Page URL. Can be either a HTML document or a <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
            "startingLine": 305,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "pageUrl"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
            "startingLine": 308,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "options",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
            "startingLine": 311,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animation",
            "optional": true
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Insert the specified pageUrl into the page stack with specified index.[/en]\n  [ja]指定したpageUrlをページスタックのindexで指定した位置に追加します。[/ja]",
            "startingLine": 314
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 300
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "insertPage(index, pageUrl, [options])",
                "startingLine": 301
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]The index where it should be inserted.[/en]\n  [ja]スタックに挿入する位置のインデックスを指定します。[/ja]",
                "startingLine": 302,
                "typeExpression": "Number",
                "type": {
                  "type": "NameExpression",
                  "name": "Number"
                },
                "typeList": [
                  "Number"
                ],
                "name": "index"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Page URL. Can be either a HTML document or a <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
                "startingLine": 305,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "pageUrl"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
                "startingLine": 308,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "options",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
                "startingLine": 311,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animation",
                "optional": true
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Insert the specified pageUrl into the page stack with specified index.[/en]\n  [ja]指定したpageUrlをページスタックのindexで指定した位置に追加します。[/ja]",
                "startingLine": 314
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "insertPage(index, pageUrl, [options])",
                "startingLine": 301
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "insertPage(index, pageUrl, [options])",
      "name": "insertPage",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]The index where it should be inserted.[/en]\n  [ja]スタックに挿入する位置のインデックスを指定します。[/ja]",
          "startingLine": 302,
          "typeExpression": "Number",
          "type": {
            "type": "NameExpression",
            "name": "Number"
          },
          "typeList": [
            "Number"
          ],
          "name": "index"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Page URL. Can be either a HTML document or a <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
          "startingLine": 305,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "pageUrl"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
          "startingLine": 308,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "options",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
          "startingLine": 311,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animation",
          "optional": true
        }
      ],
      "description": "[en]Insert the specified pageUrl into the page stack with specified index.[/en]\n  [ja]指定したpageUrlをページスタックのindexで指定した位置に追加します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 320,
      "endingLine": 341,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 320
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "popPage([options])",
            "startingLine": 321
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
            "startingLine": 322,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "options",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
            "startingLine": 325,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animation",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
            "startingLine": 328,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animationOptions",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]\n  [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]",
            "startingLine": 331,
            "typeExpression": "Boolean",
            "type": {
              "type": "NameExpression",
              "name": "Boolean"
            },
            "typeList": [
              "Boolean"
            ],
            "name": "options.refresh",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 334,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "options.onTransitionEnd",
            "optional": true
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Pops the current page from the page stack. The previous page will be displayed.[/en]\n  [ja]現在表示中のページをページスタックから取り除きます。一つ前のページに戻ります。[/ja]",
            "startingLine": 337
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 320
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "popPage([options])",
                "startingLine": 321
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
                "startingLine": 322,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "options",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
                "startingLine": 325,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animation",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
                "startingLine": 328,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animationOptions",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]\n  [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]",
                "startingLine": 331,
                "typeExpression": "Boolean",
                "type": {
                  "type": "NameExpression",
                  "name": "Boolean"
                },
                "typeList": [
                  "Boolean"
                ],
                "name": "options.refresh",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 334,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "options.onTransitionEnd",
                "optional": true
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Pops the current page from the page stack. The previous page will be displayed.[/en]\n  [ja]現在表示中のページをページスタックから取り除きます。一つ前のページに戻ります。[/ja]",
                "startingLine": 337
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "popPage([options])",
                "startingLine": 321
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "popPage([options])",
      "name": "popPage",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
          "startingLine": 322,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "options",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定します。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
          "startingLine": 325,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animation",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
          "startingLine": 328,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animationOptions",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]\n  [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]",
          "startingLine": 331,
          "typeExpression": "Boolean",
          "type": {
            "type": "NameExpression",
            "name": "Boolean"
          },
          "typeList": [
            "Boolean"
          ],
          "name": "options.refresh",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 334,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "options.onTransitionEnd",
          "optional": true
        }
      ],
      "description": "[en]Pops the current page from the page stack. The previous page will be displayed.[/en]\n  [ja]現在表示中のページをページスタックから取り除きます。一つ前のページに戻ります。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 343,
      "endingLine": 364,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 343
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "replacePage(pageUrl, [options])",
            "startingLine": 344
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Page URL. Can be either a HTML document or an <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
            "startingLine": 345,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "pageUrl"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
            "startingLine": 348,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "options",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定できます。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
            "startingLine": 351,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animation",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
            "startingLine": 354,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animationOptions",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 357,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "options.onTransitionEnd",
            "optional": true
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Replaces the current page with the specified one.[/en]\n  [ja]現在表示中のページをを指定したページに置き換えます。[/ja]",
            "startingLine": 360
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 343
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "replacePage(pageUrl, [options])",
                "startingLine": 344
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Page URL. Can be either a HTML document or an <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
                "startingLine": 345,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "pageUrl"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
                "startingLine": 348,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "options",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定できます。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
                "startingLine": 351,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animation",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
                "startingLine": 354,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animationOptions",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 357,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "options.onTransitionEnd",
                "optional": true
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Replaces the current page with the specified one.[/en]\n  [ja]現在表示中のページをを指定したページに置き換えます。[/ja]",
                "startingLine": 360
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "replacePage(pageUrl, [options])",
                "startingLine": 344
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "replacePage(pageUrl, [options])",
      "name": "replacePage",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Page URL. Can be either a HTML document or an <code>&lt;ons-template&gt;</code>.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]",
          "startingLine": 345,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "pageUrl"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
          "startingLine": 348,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "options",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定できます。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
          "startingLine": 351,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animation",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n  [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]",
          "startingLine": 354,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animationOptions",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 357,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "options.onTransitionEnd",
          "optional": true
        }
      ],
      "description": "[en]Replaces the current page with the specified one.[/en]\n  [ja]現在表示中のページをを指定したページに置き換えます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 366,
      "endingLine": 384,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 366
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "resetToPage(pageUrl, [options])",
            "startingLine": 367
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Page URL. Can be either a HTML document or an <code>&lt;ons-template&gt;</code>. If the value is undefined or '', the navigator will be reset to the page that was first displayed.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。undefinedや''を指定すると、ons-navigatorが最初に表示したページを指定したことになります。[/ja]",
            "startingLine": 368,
            "typeExpression": "String/undefined",
            "type": {
              "type": "NameExpression",
              "name": "String/undefined"
            },
            "typeList": [
              "String/undefined"
            ],
            "name": "pageUrl"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
            "startingLine": 371,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "options",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定できます。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
            "startingLine": 374,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "options.animation",
            "optional": true
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 377,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "options.onTransitionEnd",
            "optional": true
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Clears page stack and adds the specified pageUrl to the page stack.[/en]\n  [ja]ページスタックをリセットし、指定したページを表示します。[/ja]",
            "startingLine": 380
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 366
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "resetToPage(pageUrl, [options])",
                "startingLine": 367
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Page URL. Can be either a HTML document or an <code>&lt;ons-template&gt;</code>. If the value is undefined or '', the navigator will be reset to the page that was first displayed.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。undefinedや''を指定すると、ons-navigatorが最初に表示したページを指定したことになります。[/ja]",
                "startingLine": 368,
                "typeExpression": "String/undefined",
                "type": {
                  "type": "NameExpression",
                  "name": "String/undefined"
                },
                "typeList": [
                  "String/undefined"
                ],
                "name": "pageUrl"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
                "startingLine": 371,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "options",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定できます。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
                "startingLine": 374,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "options.animation",
                "optional": true
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 377,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "options.onTransitionEnd",
                "optional": true
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Clears page stack and adds the specified pageUrl to the page stack.[/en]\n  [ja]ページスタックをリセットし、指定したページを表示します。[/ja]",
                "startingLine": 380
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "resetToPage(pageUrl, [options])",
                "startingLine": 367
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "resetToPage(pageUrl, [options])",
      "name": "resetToPage",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Page URL. Can be either a HTML document or an <code>&lt;ons-template&gt;</code>. If the value is undefined or '', the navigator will be reset to the page that was first displayed.[/en]\n  [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。undefinedや''を指定すると、ons-navigatorが最初に表示したページを指定したことになります。[/ja]",
          "startingLine": 368,
          "typeExpression": "String/undefined",
          "type": {
            "type": "NameExpression",
            "name": "String/undefined"
          },
          "typeList": [
            "String/undefined"
          ],
          "name": "pageUrl"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]",
          "startingLine": 371,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "options",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Animation name. Available animations are \"slide\", \"simpleslide\", \"lift\", \"fade\" and \"none\".[/en]\n  [ja]アニメーション名を指定できます。\"slide\", \"simpleslide\", \"lift\", \"fade\", \"none\"のいずれかを指定できます。[/ja]",
          "startingLine": 374,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "options.animation",
          "optional": true
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function that is called when the transition has ended.[/en]\n  [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 377,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "options.onTransitionEnd",
          "optional": true
        }
      ],
      "description": "[en]Clears page stack and adds the specified pageUrl to the page stack.[/en]\n  [ja]ページスタックをリセットし、指定したページを表示します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 386,
      "endingLine": 395,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 386
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getCurrentPage()",
            "startingLine": 387
          },
          {
            "tagDef": {
              "name": "returns",
              "aliases": [
                "return"
              ],
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "return",
            "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
            "startingLine": 388,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Get current page's navigator item. Use this method to access options passed by pushPage() or resetToPage() method.[/en]\n  [ja]現在のページを取得します。pushPage()やresetToPage()メソッドの引数を取得できます。[/ja]",
            "startingLine": 391
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 386
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getCurrentPage()",
                "startingLine": 387
              }
            ],
            "returns": [
              {
                "tagDef": {
                  "name": "returns",
                  "aliases": [
                    "return"
                  ],
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "return",
                "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
                "startingLine": 388,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Get current page's navigator item. Use this method to access options passed by pushPage() or resetToPage() method.[/en]\n  [ja]現在のページを取得します。pushPage()やresetToPage()メソッドの引数を取得できます。[/ja]",
                "startingLine": 391
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getCurrentPage()",
                "startingLine": 387
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getCurrentPage()",
      "name": "getCurrentPage",
      "returns": {
        "tagDef": {
          "name": "returns",
          "aliases": [
            "return"
          ],
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "return",
        "description": "[en]Current page object.[/en]\n  [ja]現在のpageオブジェクト。[/ja]",
        "startingLine": 388,
        "typeExpression": "Object",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "typeList": [
          "Object"
        ]
      },
      "description": "[en]Get current page's navigator item. Use this method to access options passed by pushPage() or resetToPage() method.[/en]\n  [ja]現在のページを取得します。pushPage()やresetToPage()メソッドの引数を取得できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 397,
      "endingLine": 406,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 397
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getPages()",
            "startingLine": 398
          },
          {
            "tagDef": {
              "name": "returns",
              "aliases": [
                "return"
              ],
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "return",
            "description": "[en]List of page objects.[/en]\n  [ja]pageオブジェクトの配列。[/ja]",
            "startingLine": 399,
            "typeExpression": "List",
            "type": {
              "type": "NameExpression",
              "name": "List"
            },
            "typeList": [
              "List"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Retrieve the entire page stack of the navigator.[/en]\n  [ja]ナビゲーターの持つページスタックの一覧を取得します。[/ja]",
            "startingLine": 402
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 397
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getPages()",
                "startingLine": 398
              }
            ],
            "returns": [
              {
                "tagDef": {
                  "name": "returns",
                  "aliases": [
                    "return"
                  ],
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "return",
                "description": "[en]List of page objects.[/en]\n  [ja]pageオブジェクトの配列。[/ja]",
                "startingLine": 399,
                "typeExpression": "List",
                "type": {
                  "type": "NameExpression",
                  "name": "List"
                },
                "typeList": [
                  "List"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Retrieve the entire page stack of the navigator.[/en]\n  [ja]ナビゲーターの持つページスタックの一覧を取得します。[/ja]",
                "startingLine": 402
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getPages()",
                "startingLine": 398
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getPages()",
      "name": "getPages",
      "returns": {
        "tagDef": {
          "name": "returns",
          "aliases": [
            "return"
          ],
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "return",
        "description": "[en]List of page objects.[/en]\n  [ja]pageオブジェクトの配列。[/ja]",
        "startingLine": 399,
        "typeExpression": "List",
        "type": {
          "type": "NameExpression",
          "name": "List"
        },
        "typeList": [
          "List"
        ]
      },
      "description": "[en]Retrieve the entire page stack of the navigator.[/en]\n  [ja]ナビゲーターの持つページスタックの一覧を取得します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 408,
      "endingLine": 417,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 408
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getDeviceBackButtonHandler()",
            "startingLine": 409
          },
          {
            "tagDef": {
              "name": "returns",
              "aliases": [
                "return"
              ],
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "return",
            "description": "[en]Device back button handler.[/en]\n  [ja]デバイスのバックボタンハンドラを返します。[/ja]",
            "startingLine": 410,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Retrieve the back button handler for overriding the default behavior.[/en]\n  [ja]バックボタンハンドラを取得します。デフォルトの挙動を変更することができます。[/ja]",
            "startingLine": 413
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 408
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getDeviceBackButtonHandler()",
                "startingLine": 409
              }
            ],
            "returns": [
              {
                "tagDef": {
                  "name": "returns",
                  "aliases": [
                    "return"
                  ],
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "return",
                "description": "[en]Device back button handler.[/en]\n  [ja]デバイスのバックボタンハンドラを返します。[/ja]",
                "startingLine": 410,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Retrieve the back button handler for overriding the default behavior.[/en]\n  [ja]バックボタンハンドラを取得します。デフォルトの挙動を変更することができます。[/ja]",
                "startingLine": 413
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getDeviceBackButtonHandler()",
                "startingLine": 409
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getDeviceBackButtonHandler()",
      "name": "getDeviceBackButtonHandler",
      "returns": {
        "tagDef": {
          "name": "returns",
          "aliases": [
            "return"
          ],
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "return",
        "description": "[en]Device back button handler.[/en]\n  [ja]デバイスのバックボタンハンドラを返します。[/ja]",
        "startingLine": 410,
        "typeExpression": "Object",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "typeList": [
          "Object"
        ]
      },
      "description": "[en]Retrieve the back button handler for overriding the default behavior.[/en]\n  [ja]バックボタンハンドラを取得します。デフォルトの挙動を変更することができます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 419,
      "endingLine": 432,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 419
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "on(eventName, listener)",
            "startingLine": 420
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 421
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Add an event listener.[/en]\n  [ja]イベントリスナーを追加します。[/ja]",
            "startingLine": 422
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
            "startingLine": 425,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "eventName"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 428,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "listener"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 419
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "on(eventName, listener)",
                "startingLine": 420
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 421
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Add an event listener.[/en]\n  [ja]イベントリスナーを追加します。[/ja]",
                "startingLine": 422
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
                "startingLine": 425,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "eventName"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 428,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "listener"
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "on(eventName, listener)",
                "startingLine": 420
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "on(eventName, listener)",
      "extensionOf": "angular",
      "name": "on",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
          "startingLine": 425,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "eventName"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 428,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "listener"
        }
      ],
      "description": "[en]Add an event listener.[/en]\n  [ja]イベントリスナーを追加します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 434,
      "endingLine": 447,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 434
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "once(eventName, listener)",
            "startingLine": 435
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 436
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Add an event listener that's only triggered once.[/en]\n [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]",
            "startingLine": 437
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
            "startingLine": 440,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "eventName"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 443,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "listener"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 434
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "once(eventName, listener)",
                "startingLine": 435
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 436
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Add an event listener that's only triggered once.[/en]\n [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]",
                "startingLine": 437
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
                "startingLine": 440,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "eventName"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 443,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "listener"
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "once(eventName, listener)",
                "startingLine": 435
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "once(eventName, listener)",
      "extensionOf": "angular",
      "name": "once",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
          "startingLine": 440,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "eventName"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 443,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "listener"
        }
      ],
      "description": "[en]Add an event listener that's only triggered once.[/en]\n [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 449,
      "endingLine": 462,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 449
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "off(eventName, [listener])",
            "startingLine": 450
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 451
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]",
            "startingLine": 452
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
            "startingLine": 455,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "eventName"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]削除するイベントリスナーを指定します。[/ja]",
            "startingLine": 458,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "listener"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 449
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "off(eventName, [listener])",
                "startingLine": 450
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 451
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]",
                "startingLine": 452
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
                "startingLine": 455,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "eventName"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]削除するイベントリスナーを指定します。[/ja]",
                "startingLine": 458,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "listener"
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "off(eventName, [listener])",
                "startingLine": 450
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "off(eventName, [listener])",
      "extensionOf": "angular",
      "name": "off",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
          "startingLine": 455,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "eventName"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]削除するイベントリスナーを指定します。[/ja]",
          "startingLine": 458,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "listener"
        }
      ],
      "description": "[en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    }
  ],
  "attributes": [
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 126,
      "endingLine": 134,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 126
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "page",
            "startingLine": 127
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 128
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 129,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]First page to show when navigator is initialized.[/en]\n  [ja]ナビゲーターが初期化された時に表示するページを指定します。[/ja]",
            "startingLine": 130
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 126
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "page",
                "startingLine": 127
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 128
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 129,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]First page to show when navigator is initialized.[/en]\n  [ja]ナビゲーターが初期化された時に表示するページを指定します。[/ja]",
                "startingLine": 130
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 129,
        "typeExpression": "String",
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "typeList": [
          "String"
        ]
      },
      "name": "page",
      "description": "[en]First page to show when navigator is initialized.[/en]\n  [ja]ナビゲーターが初期化された時に表示するページを指定します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 136,
      "endingLine": 145,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 136
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "var",
            "startingLine": 137
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 138
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 139
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 140,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Variable name to refer this navigator.[/en]\n [ja]このナビゲーターを参照するための名前を指定します。[/ja]",
            "startingLine": 141
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 136
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "var",
                "startingLine": 137
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 138
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 139
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 140,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Variable name to refer this navigator.[/en]\n [ja]このナビゲーターを参照するための名前を指定します。[/ja]",
                "startingLine": 141
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 140,
        "typeExpression": "String",
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "typeList": [
          "String"
        ]
      },
      "name": "var",
      "description": "[en]Variable name to refer this navigator.[/en]\n [ja]このナビゲーターを参照するための名前を指定します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 147,
      "endingLine": 156,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 147
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-prepush",
            "startingLine": 148
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 149
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 150
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 151,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when the \"prepush\" event is fired.[/en]\n [ja]\"prepush\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 152
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 147
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-prepush",
                "startingLine": 148
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 149
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 150
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 151,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when the \"prepush\" event is fired.[/en]\n [ja]\"prepush\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 152
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 151,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-prepush",
      "description": "[en]Allows you to specify custom behavior when the \"prepush\" event is fired.[/en]\n [ja]\"prepush\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 158,
      "endingLine": 167,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 158
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-prepop",
            "startingLine": 159
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 160
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 161
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 162,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when the \"prepop\" event is fired.[/en]\n [ja]\"prepop\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 163
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 158
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-prepop",
                "startingLine": 159
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 160
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 161
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 162,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when the \"prepop\" event is fired.[/en]\n [ja]\"prepop\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 163
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 162,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-prepop",
      "description": "[en]Allows you to specify custom behavior when the \"prepop\" event is fired.[/en]\n [ja]\"prepop\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 169,
      "endingLine": 178,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 169
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-postpush",
            "startingLine": 170
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 171
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 172
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 173,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when the \"postpush\" event is fired.[/en]\n [ja]\"postpush\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 174
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 169
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-postpush",
                "startingLine": 170
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 171
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 172
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 173,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when the \"postpush\" event is fired.[/en]\n [ja]\"postpush\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 174
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 173,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-postpush",
      "description": "[en]Allows you to specify custom behavior when the \"postpush\" event is fired.[/en]\n [ja]\"postpush\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 180,
      "endingLine": 189,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 180
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-postpop",
            "startingLine": 181
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 182
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 183
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 184,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when the \"postpop\" event is fired.[/en]\n [ja]\"postpop\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 185
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 180
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-postpop",
                "startingLine": 181
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 182
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 183
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 184,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when the \"postpop\" event is fired.[/en]\n [ja]\"postpop\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 185
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 184,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-postpop",
      "description": "[en]Allows you to specify custom behavior when the \"postpop\" event is fired.[/en]\n [ja]\"postpop\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 191,
      "endingLine": 200,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 191
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-init",
            "startingLine": 192
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 193
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 194
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 195,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when a page's \"init\" event is fired.[/en]\n [ja]ページの\"init\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 196
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 191
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-init",
                "startingLine": 192
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 193
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 194
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 195,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when a page's \"init\" event is fired.[/en]\n [ja]ページの\"init\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 196
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 195,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-init",
      "description": "[en]Allows you to specify custom behavior when a page's \"init\" event is fired.[/en]\n [ja]ページの\"init\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 202,
      "endingLine": 211,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 202
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-show",
            "startingLine": 203
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 204
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 205
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 206,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when a page's \"show\" event is fired.[/en]\n [ja]ページの\"show\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 207
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 202
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-show",
                "startingLine": 203
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 204
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 205
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 206,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when a page's \"show\" event is fired.[/en]\n [ja]ページの\"show\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 207
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 206,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-show",
      "description": "[en]Allows you to specify custom behavior when a page's \"show\" event is fired.[/en]\n [ja]ページの\"show\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 213,
      "endingLine": 222,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 213
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-hide",
            "startingLine": 214
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 215
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 216
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 217,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when a page's \"hide\" event is fired.[/en]\n [ja]ページの\"hide\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 218
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 213
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-hide",
                "startingLine": 214
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 215
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 216
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 217,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when a page's \"hide\" event is fired.[/en]\n [ja]ページの\"hide\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 218
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 217,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-hide",
      "description": "[en]Allows you to specify custom behavior when a page's \"hide\" event is fired.[/en]\n [ja]ページの\"hide\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 224,
      "endingLine": 233,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 224
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-destroy",
            "startingLine": 225
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 226
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 227
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 228,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when a page's \"destroy\" event is fired.[/en]\n [ja]ページの\"destroy\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 229
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 224
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-destroy",
                "startingLine": 225
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 226
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 227
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 228,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when a page's \"destroy\" event is fired.[/en]\n [ja]ページの\"destroy\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 229
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 228,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-destroy",
      "description": "[en]Allows you to specify custom behavior when a page's \"destroy\" event is fired.[/en]\n [ja]ページの\"destroy\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 235,
      "endingLine": 243,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 235
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "animation",
            "startingLine": 236
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 237,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ]
          },
          {
            "tagDef": {
              "name": "default"
            },
            "tagName": "default",
            "description": "default",
            "startingLine": 238
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Specify the transition animation. Use one of \"slide\", \"simpleslide\", \"fade\", \"lift\", \"none\" and \"default\".[/en]\n [ja]画面遷移する際のアニメーションを指定します。\"slide\", \"simpleslide\", \"fade\", \"lift\", \"none\", \"default\"のいずれかを指定できます。[/ja]",
            "startingLine": 239
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 235
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "animation",
                "startingLine": 236
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 237,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ]
              }
            ],
            "default": [
              {
                "tagDef": {
                  "name": "default"
                },
                "tagName": "default",
                "description": "default",
                "startingLine": 238
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Specify the transition animation. Use one of \"slide\", \"simpleslide\", \"fade\", \"lift\", \"none\" and \"default\".[/en]\n [ja]画面遷移する際のアニメーションを指定します。\"slide\", \"simpleslide\", \"fade\", \"lift\", \"none\", \"default\"のいずれかを指定できます。[/ja]",
                "startingLine": 239
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 237,
        "typeExpression": "String",
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "typeList": [
          "String"
        ]
      },
      "default": "default",
      "name": "animation",
      "description": "[en]Specify the transition animation. Use one of \"slide\", \"simpleslide\", \"fade\", \"lift\", \"none\" and \"default\".[/en]\n [ja]画面遷移する際のアニメーションを指定します。\"slide\", \"simpleslide\", \"fade\", \"lift\", \"none\", \"default\"のいずれかを指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "navigator",
        "extension": "js"
      },
      "startingLine": 245,
      "endingLine": 252,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 245
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "animation-options",
            "startingLine": 246
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 247,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Specify the animation's duration, timing and delay with an object literal. E.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/en]\n [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]",
            "startingLine": 248
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 245
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "animation-options",
                "startingLine": 246
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 247,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Specify the animation's duration, timing and delay with an object literal. E.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/en]\n [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]",
                "startingLine": 248
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 247,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "animation-options",
      "description": "[en]Specify the animation's duration, timing and delay with an object literal. E.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/en]\n [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    }
  ],
  "aliases": [
    "navigator"
  ],
  "path": "api/../directive/ons-navigator",
  "outputPath": "partials/api/../directive/ons-navigator.html"
}
{
  "fileInfo": {
    "baseName": "pullHook",
    "extension": "js"
  },
  "startingLine": 1,
  "endingLine": 43,
  "codeAncestors": [],
  "docType": "directive",
  "tags": {
    "tags": [
      {
        "tagDef": {
          "name": "ngdoc",
          "required": true,
          "docProperty": "docType"
        },
        "tagName": "ngdoc",
        "description": "directive",
        "startingLine": 1
      },
      {
        "tagDef": {
          "name": "id"
        },
        "tagName": "id",
        "description": "pull-hook",
        "startingLine": 2
      },
      {
        "tagDef": {
          "name": "name",
          "required": true
        },
        "tagName": "name",
        "description": "ons-pull-hook",
        "startingLine": 3
      },
      {
        "tagDef": {
          "name": "category",
          "multi": true,
          "docProperty": "categories"
        },
        "tagName": "category",
        "description": "control",
        "startingLine": 4
      },
      {
        "tagDef": {
          "name": "description"
        },
        "tagName": "description",
        "description": "  [en]Component that adds \"pull-to-refresh\" to an <ons-page> element.[/en]\n  [ja]ons-page要素以下でいわゆるpull to refreshを実装するためのコンポーネントです。[/ja]",
        "startingLine": 5
      },
      {
        "tagDef": {
          "name": "codepen"
        },
        "tagName": "codepen",
        "description": "WbJogM",
        "startingLine": 8
      },
      {
        "tagDef": {
          "name": "guide",
          "multi": true,
          "docProperty": "guides"
        },
        "tagName": "guide",
        "description": "UsingPullHook\n  [en]How to use Pull Hook[/en]\n  [ja]プルフックを使う[/ja]",
        "startingLine": 9
      },
      {
        "tagDef": {
          "name": "example",
          "multi": true,
          "docProperty": "examples"
        },
        "tagName": "example",
        "description": "<script>\n  ons.bootstrap()\n\n  .controller('MyController', function($scope, $timeout) {\n    $scope.items = [3, 2 ,1];\n\n    $scope.load = function($done) {\n      $timeout(function() {\n        $scope.items.unshift($scope.items.length + 1);\n        $done();\n      }, 1000);\n    };\n  });\n</script>\n\n<ons-page ng-controller=\"MyController\">\n  <ons-pull-hook var=\"loader\" ng-action=\"load($done)\">\n    <span ng-switch=\"loader.getCurrentState()\">\n      <span ng-switch-when=\"initial\">Pull down to refresh</span>\n      <span ng-switch-when=\"preaction\">Release to refresh</span>\n      <span ng-switch-when=\"action\">Loading data. Please wait...</span>\n    </span>\n  </ons-pull-hook>\n  <ons-list>\n    <ons-list-item ng-repeat=\"item in items\">\n      Item #{{ item }}\n    </ons-list-item>\n  </ons-list>\n</ons-page>",
        "startingLine": 12
      }
    ],
    "tagsByName": {
      "obj": {
        "ngdoc": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "directive",
            "startingLine": 1
          }
        ],
        "id": [
          {
            "tagDef": {
              "name": "id"
            },
            "tagName": "id",
            "description": "pull-hook",
            "startingLine": 2
          }
        ],
        "name": [
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-pull-hook",
            "startingLine": 3
          }
        ],
        "category": [
          {
            "tagDef": {
              "name": "category",
              "multi": true,
              "docProperty": "categories"
            },
            "tagName": "category",
            "description": "control",
            "startingLine": 4
          }
        ],
        "description": [
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Component that adds \"pull-to-refresh\" to an <ons-page> element.[/en]\n  [ja]ons-page要素以下でいわゆるpull to refreshを実装するためのコンポーネントです。[/ja]",
            "startingLine": 5
          }
        ],
        "codepen": [
          {
            "tagDef": {
              "name": "codepen"
            },
            "tagName": "codepen",
            "description": "WbJogM",
            "startingLine": 8
          }
        ],
        "guide": [
          {
            "tagDef": {
              "name": "guide",
              "multi": true,
              "docProperty": "guides"
            },
            "tagName": "guide",
            "description": "UsingPullHook\n  [en]How to use Pull Hook[/en]\n  [ja]プルフックを使う[/ja]",
            "startingLine": 9
          }
        ],
        "example": [
          {
            "tagDef": {
              "name": "example",
              "multi": true,
              "docProperty": "examples"
            },
            "tagName": "example",
            "description": "<script>\n  ons.bootstrap()\n\n  .controller('MyController', function($scope, $timeout) {\n    $scope.items = [3, 2 ,1];\n\n    $scope.load = function($done) {\n      $timeout(function() {\n        $scope.items.unshift($scope.items.length + 1);\n        $done();\n      }, 1000);\n    };\n  });\n</script>\n\n<ons-page ng-controller=\"MyController\">\n  <ons-pull-hook var=\"loader\" ng-action=\"load($done)\">\n    <span ng-switch=\"loader.getCurrentState()\">\n      <span ng-switch-when=\"initial\">Pull down to refresh</span>\n      <span ng-switch-when=\"preaction\">Release to refresh</span>\n      <span ng-switch-when=\"action\">Loading data. Please wait...</span>\n    </span>\n  </ons-pull-hook>\n  <ons-list>\n    <ons-list-item ng-repeat=\"item in items\">\n      Item #{{ item }}\n    </ons-list-item>\n  </ons-list>\n</ons-page>",
            "startingLine": 12
          }
        ]
      },
      "hasProto": false
    },
    "badTags": [],
    "description": ""
  },
  "codepen": {
    "id": "WbJogM",
    "isWide": false
  },
  "guides": [
    {
      "name": "UsingPullHook\n",
      "description": " [en]How to use Pull Hook[/en]\n  [ja]プルフックを使う[/ja]"
    }
  ],
  "categories": [
    "control"
  ],
  "id": "pull-hook",
  "example": "<script>\n  ons.bootstrap()\n\n  .controller('MyController', function($scope, $timeout) {\n    $scope.items = [3, 2 ,1];\n\n    $scope.load = function($done) {\n      $timeout(function() {\n        $scope.items.unshift($scope.items.length + 1);\n        $done();\n      }, 1000);\n    };\n  });\n</script>\n\n<ons-page ng-controller=\"MyController\">\n  <ons-pull-hook var=\"loader\" ng-action=\"load($done)\">\n    <span ng-switch=\"loader.getCurrentState()\">\n      <span ng-switch-when=\"initial\">Pull down to refresh</span>\n      <span ng-switch-when=\"preaction\">Release to refresh</span>\n      <span ng-switch-when=\"action\">Loading data. Please wait...</span>\n    </span>\n  </ons-pull-hook>\n  <ons-list>\n    <ons-list-item ng-repeat=\"item in items\">\n      Item #{{ item }}\n    </ons-list-item>\n  </ons-list>\n</ons-page>",
  "name": "ons-pull-hook",
  "description": "[en]Component that adds \"pull-to-refresh\" to an <ons-page> element.[/en]\n  [ja]ons-page要素以下でいわゆるpull to refreshを実装するためのコンポーネントです。[/ja]",
  "area": "api",
  "module": "..",
  "restrict": {
    "element": false,
    "attribute": true,
    "cssClass": false,
    "comment": false
  },
  "examples": [
    "<script>\n  ons.bootstrap()\n\n  .controller('MyController', function($scope, $timeout) {\n    $scope.items = [3, 2 ,1];\n\n    $scope.load = function($done) {\n      $timeout(function() {\n        $scope.items.unshift($scope.items.length + 1);\n        $done();\n      }, 1000);\n    };\n  });\n</script>\n\n<ons-page ng-controller=\"MyController\">\n  <ons-pull-hook var=\"loader\" ng-action=\"load($done)\">\n    <span ng-switch=\"loader.getCurrentState()\">\n      <span ng-switch-when=\"initial\">Pull down to refresh</span>\n      <span ng-switch-when=\"preaction\">Release to refresh</span>\n      <span ng-switch-when=\"action\">Loading data. Please wait...</span>\n    </span>\n  </ons-pull-hook>\n  <ons-list>\n    <ons-list-item ng-repeat=\"item in items\">\n      Item #{{ item }}\n    </ons-list-item>\n  </ons-list>\n</ons-page>"
  ],
  "element": "ANY",
  "priority": 0,
  "codeName": null,
  "events": [
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 45,
      "endingLine": 60,
      "codeAncestors": [],
      "docType": "event",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "event",
            "startingLine": 45
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "changestate",
            "startingLine": 46
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Fired when the state is changed. The state can be either \"initial\", \"preaction\" or \"action\".[/en]\n  [ja]コンポーネントの状態が変わった場合に発火します。状態は、\"initial\", \"preaction\", \"action\"のいずれかです。[/ja]",
            "startingLine": 47
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Event object.[/en]\n  [ja]イベントオブジェクト。[/ja]",
            "startingLine": 50,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
            "startingLine": 53,
            "typeExpression": "Object",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "typeList": [
              "Object"
            ],
            "name": "event.pullHook"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Current state.[/en]\n  [ja]現在の状態名を参照できます。[/ja]",
            "startingLine": 56,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "event.state"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "event",
                "startingLine": 45
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "changestate",
                "startingLine": 46
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Fired when the state is changed. The state can be either \"initial\", \"preaction\" or \"action\".[/en]\n  [ja]コンポーネントの状態が変わった場合に発火します。状態は、\"initial\", \"preaction\", \"action\"のいずれかです。[/ja]",
                "startingLine": 47
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Event object.[/en]\n  [ja]イベントオブジェクト。[/ja]",
                "startingLine": 50,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
                "startingLine": 53,
                "typeExpression": "Object",
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "typeList": [
                  "Object"
                ],
                "name": "event.pullHook"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Current state.[/en]\n  [ja]現在の状態名を参照できます。[/ja]",
                "startingLine": 56,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "event.state"
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "changestate",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Event object.[/en]\n  [ja]イベントオブジェクト。[/ja]",
          "startingLine": 50,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Component object.[/en]\n  [ja]コンポーネントのオブジェクト。[/ja]",
          "startingLine": 53,
          "typeExpression": "Object",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "typeList": [
            "Object"
          ],
          "name": "event.pullHook"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Current state.[/en]\n  [ja]現在の状態名を参照できます。[/ja]",
          "startingLine": 56,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "event.state"
        }
      ],
      "description": "[en]Fired when the state is changed. The state can be either \"initial\", \"preaction\" or \"action\".[/en]\n  [ja]コンポーネントの状態が変わった場合に発火します。状態は、\"initial\", \"preaction\", \"action\"のいずれかです。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    }
  ],
  "methods": [
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 138,
      "endingLine": 147,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 138
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "setDisabled(disabled)",
            "startingLine": 139
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]If true the pull hook will be disabled.[/en]\n  [ja]trueを指定すると、プルフックがdisabled状態になります。[/ja]",
            "startingLine": 140,
            "typeExpression": "Boolean",
            "type": {
              "type": "NameExpression",
              "name": "Boolean"
            },
            "typeList": [
              "Boolean"
            ],
            "name": "disabled"
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Disable or enable the component.[/en]\n  [ja]disabled状態にするかどうかを設定できます。[/ja]",
            "startingLine": 143
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 138
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "setDisabled(disabled)",
                "startingLine": 139
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]If true the pull hook will be disabled.[/en]\n  [ja]trueを指定すると、プルフックがdisabled状態になります。[/ja]",
                "startingLine": 140,
                "typeExpression": "Boolean",
                "type": {
                  "type": "NameExpression",
                  "name": "Boolean"
                },
                "typeList": [
                  "Boolean"
                ],
                "name": "disabled"
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Disable or enable the component.[/en]\n  [ja]disabled状態にするかどうかを設定できます。[/ja]",
                "startingLine": 143
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "setDisabled(disabled)",
                "startingLine": 139
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "setDisabled(disabled)",
      "name": "setDisabled",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]If true the pull hook will be disabled.[/en]\n  [ja]trueを指定すると、プルフックがdisabled状態になります。[/ja]",
          "startingLine": 140,
          "typeExpression": "Boolean",
          "type": {
            "type": "NameExpression",
            "name": "Boolean"
          },
          "typeList": [
            "Boolean"
          ],
          "name": "disabled"
        }
      ],
      "description": "[en]Disable or enable the component.[/en]\n  [ja]disabled状態にするかどうかを設定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 149,
      "endingLine": 158,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 149
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "isDisabled()",
            "startingLine": 150
          },
          {
            "tagDef": {
              "name": "returns",
              "aliases": [
                "return"
              ],
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "return",
            "description": "[en]true if the pull hook is disabled.[/en]\n  [ja]プルフックがdisabled状態の場合、trueを返します。[/ja]",
            "startingLine": 151,
            "typeExpression": "Boolean",
            "type": {
              "type": "NameExpression",
              "name": "Boolean"
            },
            "typeList": [
              "Boolean"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Returns whether the component is disabled or enabled.[/en]\n  [ja]disabled状態になっているかを得ることが出来ます。[/ja]",
            "startingLine": 154
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 149
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "isDisabled()",
                "startingLine": 150
              }
            ],
            "returns": [
              {
                "tagDef": {
                  "name": "returns",
                  "aliases": [
                    "return"
                  ],
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "return",
                "description": "[en]true if the pull hook is disabled.[/en]\n  [ja]プルフックがdisabled状態の場合、trueを返します。[/ja]",
                "startingLine": 151,
                "typeExpression": "Boolean",
                "type": {
                  "type": "NameExpression",
                  "name": "Boolean"
                },
                "typeList": [
                  "Boolean"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Returns whether the component is disabled or enabled.[/en]\n  [ja]disabled状態になっているかを得ることが出来ます。[/ja]",
                "startingLine": 154
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "isDisabled()",
                "startingLine": 150
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "isDisabled()",
      "name": "isDisabled",
      "returns": {
        "tagDef": {
          "name": "returns",
          "aliases": [
            "return"
          ],
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "return",
        "description": "[en]true if the pull hook is disabled.[/en]\n  [ja]プルフックがdisabled状態の場合、trueを返します。[/ja]",
        "startingLine": 151,
        "typeExpression": "Boolean",
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        },
        "typeList": [
          "Boolean"
        ]
      },
      "description": "[en]Returns whether the component is disabled or enabled.[/en]\n  [ja]disabled状態になっているかを得ることが出来ます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 160,
      "endingLine": 166,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 160
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getHeight()",
            "startingLine": 161
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Returns the height of the pull hook in pixels.[/en]\n  [ja]プルフックの高さをピクセル数で返します。[/ja]",
            "startingLine": 162
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 160
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getHeight()",
                "startingLine": 161
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Returns the height of the pull hook in pixels.[/en]\n  [ja]プルフックの高さをピクセル数で返します。[/ja]",
                "startingLine": 162
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getHeight()",
                "startingLine": 161
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getHeight()",
      "name": "getHeight",
      "description": "[en]Returns the height of the pull hook in pixels.[/en]\n  [ja]プルフックの高さをピクセル数で返します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 168,
      "endingLine": 177,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 168
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "setHeight(height)",
            "startingLine": 169
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Desired height.[/en]\n  [ja]要素の高さを指定します。[/ja]",
            "startingLine": 170,
            "typeExpression": "Number",
            "type": {
              "type": "NameExpression",
              "name": "Number"
            },
            "typeList": [
              "Number"
            ],
            "name": "height"
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Specify the height.[/en]\n  [ja]高さを指定できます。[/ja]",
            "startingLine": 173
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 168
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "setHeight(height)",
                "startingLine": 169
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Desired height.[/en]\n  [ja]要素の高さを指定します。[/ja]",
                "startingLine": 170,
                "typeExpression": "Number",
                "type": {
                  "type": "NameExpression",
                  "name": "Number"
                },
                "typeList": [
                  "Number"
                ],
                "name": "height"
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Specify the height.[/en]\n  [ja]高さを指定できます。[/ja]",
                "startingLine": 173
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "setHeight(height)",
                "startingLine": 169
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "setHeight(height)",
      "name": "setHeight",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Desired height.[/en]\n  [ja]要素の高さを指定します。[/ja]",
          "startingLine": 170,
          "typeExpression": "Number",
          "type": {
            "type": "NameExpression",
            "name": "Number"
          },
          "typeList": [
            "Number"
          ],
          "name": "height"
        }
      ],
      "description": "[en]Specify the height.[/en]\n  [ja]高さを指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 179,
      "endingLine": 185,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 179
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getThresholdHeight()",
            "startingLine": 180
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Returns the height of the threshold in pixels.[/en]\n  [ja]閾値、となる高さをピクセル数で返します。[/ja]",
            "startingLine": 181
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 179
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getThresholdHeight()",
                "startingLine": 180
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Returns the height of the threshold in pixels.[/en]\n  [ja]閾値、となる高さをピクセル数で返します。[/ja]",
                "startingLine": 181
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getThresholdHeight()",
                "startingLine": 180
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getThresholdHeight()",
      "name": "getThresholdHeight",
      "description": "[en]Returns the height of the threshold in pixels.[/en]\n  [ja]閾値、となる高さをピクセル数で返します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 187,
      "endingLine": 196,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 187
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "setThresholdHeight(thresholdHeight)",
            "startingLine": 188
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Desired threshold height.[/en]\n  [ja]プルフックのアクションを起こす閾値となる高さを指定します。[/ja]",
            "startingLine": 189,
            "typeExpression": "Number",
            "type": {
              "type": "NameExpression",
              "name": "Number"
            },
            "typeList": [
              "Number"
            ],
            "name": "thresholdHeight"
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Specify the threshold height.[/en]\n  [ja]閾値となる高さを指定できます。[/ja]",
            "startingLine": 192
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 187
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "setThresholdHeight(thresholdHeight)",
                "startingLine": 188
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Desired threshold height.[/en]\n  [ja]プルフックのアクションを起こす閾値となる高さを指定します。[/ja]",
                "startingLine": 189,
                "typeExpression": "Number",
                "type": {
                  "type": "NameExpression",
                  "name": "Number"
                },
                "typeList": [
                  "Number"
                ],
                "name": "thresholdHeight"
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Specify the threshold height.[/en]\n  [ja]閾値となる高さを指定できます。[/ja]",
                "startingLine": 192
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "setThresholdHeight(thresholdHeight)",
                "startingLine": 188
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "setThresholdHeight(thresholdHeight)",
      "name": "setThresholdHeight",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Desired threshold height.[/en]\n  [ja]プルフックのアクションを起こす閾値となる高さを指定します。[/ja]",
          "startingLine": 189,
          "typeExpression": "Number",
          "type": {
            "type": "NameExpression",
            "name": "Number"
          },
          "typeList": [
            "Number"
          ],
          "name": "thresholdHeight"
        }
      ],
      "description": "[en]Specify the threshold height.[/en]\n  [ja]閾値となる高さを指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 198,
      "endingLine": 204,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 198
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getPullDistance()",
            "startingLine": 199
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Returns the current number of pixels the pull hook has moved.[/en]\n  [ja]現在のプルフックが引き出された距離をピクセル数で返します。[/ja]",
            "startingLine": 200
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 198
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getPullDistance()",
                "startingLine": 199
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Returns the current number of pixels the pull hook has moved.[/en]\n  [ja]現在のプルフックが引き出された距離をピクセル数で返します。[/ja]",
                "startingLine": 200
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getPullDistance()",
                "startingLine": 199
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getPullDistance()",
      "name": "getPullDistance",
      "description": "[en]Returns the current number of pixels the pull hook has moved.[/en]\n  [ja]現在のプルフックが引き出された距離をピクセル数で返します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 206,
      "endingLine": 212,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 206
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "getCurrentState()",
            "startingLine": 207
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Returns the current state of the element.[/en]\n  [ja]要素の現在の状態を返します。[/ja]",
            "startingLine": 208
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 206
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getCurrentState()",
                "startingLine": 207
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Returns the current state of the element.[/en]\n  [ja]要素の現在の状態を返します。[/ja]",
                "startingLine": 208
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "getCurrentState()",
                "startingLine": 207
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "getCurrentState()",
      "name": "getCurrentState",
      "description": "[en]Returns the current state of the element.[/en]\n  [ja]要素の現在の状態を返します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 214,
      "endingLine": 227,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 214
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "on(eventName, listener)",
            "startingLine": 215
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 216
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Add an event listener.[/en]\n  [ja]イベントリスナーを追加します。[/ja]",
            "startingLine": 217
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
            "startingLine": 220,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "eventName"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 223,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "listener"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 214
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "on(eventName, listener)",
                "startingLine": 215
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 216
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Add an event listener.[/en]\n  [ja]イベントリスナーを追加します。[/ja]",
                "startingLine": 217
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
                "startingLine": 220,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "eventName"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 223,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "listener"
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "on(eventName, listener)",
                "startingLine": 215
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "on(eventName, listener)",
      "extensionOf": "angular",
      "name": "on",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
          "startingLine": 220,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "eventName"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 223,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "listener"
        }
      ],
      "description": "[en]Add an event listener.[/en]\n  [ja]イベントリスナーを追加します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 229,
      "endingLine": 242,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 229
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "once(eventName, listener)",
            "startingLine": 230
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 231
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Add an event listener that's only triggered once.[/en]\n [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]",
            "startingLine": 232
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
            "startingLine": 235,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "eventName"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]",
            "startingLine": 238,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "listener"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 229
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "once(eventName, listener)",
                "startingLine": 230
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 231
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Add an event listener that's only triggered once.[/en]\n [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]",
                "startingLine": 232
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
                "startingLine": 235,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "eventName"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]",
                "startingLine": 238,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "listener"
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "once(eventName, listener)",
                "startingLine": 230
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "once(eventName, listener)",
      "extensionOf": "angular",
      "name": "once",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
          "startingLine": 235,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "eventName"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]",
          "startingLine": 238,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "listener"
        }
      ],
      "description": "[en]Add an event listener that's only triggered once.[/en]\n [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 244,
      "endingLine": 257,
      "codeAncestors": [],
      "docType": "method",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "method",
            "startingLine": 244
          },
          {
            "tagDef": {
              "name": "signature",
              "priority": 100
            },
            "tagName": "signature",
            "description": "off(eventName, [listener])",
            "startingLine": 245
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 246
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]",
            "startingLine": 247
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
            "startingLine": 250,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ],
            "name": "eventName"
          },
          {
            "tagDef": {
              "name": "param",
              "multi": true,
              "docProperty": "params",
              "transforms": [
                null,
                null,
                null
              ]
            },
            "tagName": "param",
            "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]削除するイベントリスナーを指定します。[/ja]",
            "startingLine": 253,
            "typeExpression": "Function",
            "type": {
              "type": "FunctionType",
              "params": []
            },
            "typeList": [
              "Function"
            ],
            "name": "listener"
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "method",
                "startingLine": 244
              }
            ],
            "signature": [
              {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "off(eventName, [listener])",
                "startingLine": 245
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 246
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]",
                "startingLine": 247
              }
            ],
            "param": [
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
                "startingLine": 250,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ],
                "name": "eventName"
              },
              {
                "tagDef": {
                  "name": "param",
                  "multi": true,
                  "docProperty": "params",
                  "transforms": [
                    null,
                    null,
                    null
                  ]
                },
                "tagName": "param",
                "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]削除するイベントリスナーを指定します。[/ja]",
                "startingLine": 253,
                "typeExpression": "Function",
                "type": {
                  "type": "FunctionType",
                  "params": []
                },
                "typeList": [
                  "Function"
                ],
                "name": "listener"
              }
            ],
            "name": {
              "0": {
                "tagDef": {
                  "name": "signature",
                  "priority": 100
                },
                "tagName": "signature",
                "description": "off(eventName, [listener])",
                "startingLine": 245
              },
              "tagName": "name"
            }
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "signature": "off(eventName, [listener])",
      "extensionOf": "angular",
      "name": "off",
      "params": [
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Name of the event.[/en]\n  [ja]イベント名を指定します。[/ja]",
          "startingLine": 250,
          "typeExpression": "String",
          "type": {
            "type": "NameExpression",
            "name": "String"
          },
          "typeList": [
            "String"
          ],
          "name": "eventName"
        },
        {
          "tagDef": {
            "name": "param",
            "multi": true,
            "docProperty": "params",
            "transforms": [
              null,
              null,
              null
            ]
          },
          "tagName": "param",
          "description": "[en]Function to execute when the event is triggered.[/en]\n  [ja]削除するイベントリスナーを指定します。[/ja]",
          "startingLine": 253,
          "typeExpression": "Function",
          "type": {
            "type": "FunctionType",
            "params": []
          },
          "typeList": [
            "Function"
          ],
          "name": "listener"
        }
      ],
      "description": "[en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    }
  ],
  "attributes": [
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 62,
      "endingLine": 71,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 62
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "var",
            "startingLine": 63
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 64
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 65
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 66,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Variable name to refer this component.[/en]\n  [ja]このコンポーネントを参照するための名前を指定します。[/ja]",
            "startingLine": 67
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 62
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "var",
                "startingLine": 63
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 64
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 65
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 66,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Variable name to refer this component.[/en]\n  [ja]このコンポーネントを参照するための名前を指定します。[/ja]",
                "startingLine": 67
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 66,
        "typeExpression": "String",
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "typeList": [
          "String"
        ]
      },
      "name": "var",
      "description": "[en]Variable name to refer this component.[/en]\n  [ja]このコンポーネントを参照するための名前を指定します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 73,
      "endingLine": 79,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 73
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "disabled",
            "startingLine": 74
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]If this attribute is set the \"pull-to-refresh\" functionality is disabled.[/en]\n  [ja]この属性がある時、disabled状態になりアクションが実行されなくなります[/ja]",
            "startingLine": 75
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 73
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "disabled",
                "startingLine": 74
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]If this attribute is set the \"pull-to-refresh\" functionality is disabled.[/en]\n  [ja]この属性がある時、disabled状態になりアクションが実行されなくなります[/ja]",
                "startingLine": 75
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "disabled",
      "description": "[en]If this attribute is set the \"pull-to-refresh\" functionality is disabled.[/en]\n  [ja]この属性がある時、disabled状態になりアクションが実行されなくなります[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 81,
      "endingLine": 90,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 81
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ng-action",
            "startingLine": 82
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 83
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 84
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 85,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Use to specify custom behavior when the page is pulled down. A <code>$done</code> function is available to tell the component that the action is completed.[/en]\n  [ja]pull downしたときの振る舞いを指定します。アクションが完了した時には<code>$done</code>関数を呼び出します。[/ja]",
            "startingLine": 86
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 81
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ng-action",
                "startingLine": 82
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 83
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 84
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 85,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Use to specify custom behavior when the page is pulled down. A <code>$done</code> function is available to tell the component that the action is completed.[/en]\n  [ja]pull downしたときの振る舞いを指定します。アクションが完了した時には<code>$done</code>関数を呼び出します。[/ja]",
                "startingLine": 86
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 85,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ng-action",
      "description": "[en]Use to specify custom behavior when the page is pulled down. A <code>$done</code> function is available to tell the component that the action is completed.[/en]\n  [ja]pull downしたときの振る舞いを指定します。アクションが完了した時には<code>$done</code>関数を呼び出します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 92,
      "endingLine": 99,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 92
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "on-action",
            "startingLine": 93
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 94,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Same as <code>ng-action</code> but can be used without AngularJS. A function called <code>done</code> is available to call when action is complete.[/en]\n  [ja]<code>ng-action</code>と同じですが、AngularJS無しで利用する場合に利用できます。アクションが完了した時には<code>done</code>関数を呼び出します。[/ja]",
            "startingLine": 95
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 92
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "on-action",
                "startingLine": 93
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 94,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Same as <code>ng-action</code> but can be used without AngularJS. A function called <code>done</code> is available to call when action is complete.[/en]\n  [ja]<code>ng-action</code>と同じですが、AngularJS無しで利用する場合に利用できます。アクションが完了した時には<code>done</code>関数を呼び出します。[/ja]",
                "startingLine": 95
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 94,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "on-action",
      "description": "[en]Same as <code>ng-action</code> but can be used without AngularJS. A function called <code>done</code> is available to call when action is complete.[/en]\n  [ja]<code>ng-action</code>と同じですが、AngularJS無しで利用する場合に利用できます。アクションが完了した時には<code>done</code>関数を呼び出します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 101,
      "endingLine": 108,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 101
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "height",
            "startingLine": 102
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 103,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Specify the height of the component. When pulled down further than this value it will switch to the \"preaction\" state. The default value is \"64px\".[/en]\n  [ja]コンポーネントの高さを指定します。この高さ以上にpull downすると\"preaction\"状態に移行します。デフォルトの値は\"64px\"です。[/ja]",
            "startingLine": 104
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 101
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "height",
                "startingLine": 102
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 103,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Specify the height of the component. When pulled down further than this value it will switch to the \"preaction\" state. The default value is \"64px\".[/en]\n  [ja]コンポーネントの高さを指定します。この高さ以上にpull downすると\"preaction\"状態に移行します。デフォルトの値は\"64px\"です。[/ja]",
                "startingLine": 104
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 103,
        "typeExpression": "String",
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "typeList": [
          "String"
        ]
      },
      "name": "height",
      "description": "[en]Specify the height of the component. When pulled down further than this value it will switch to the \"preaction\" state. The default value is \"64px\".[/en]\n  [ja]コンポーネントの高さを指定します。この高さ以上にpull downすると\"preaction\"状態に移行します。デフォルトの値は\"64px\"です。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 110,
      "endingLine": 117,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 110
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "threshold-height",
            "startingLine": 111
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 112,
            "typeExpression": "String",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "typeList": [
              "String"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]Specify the threshold height. The component automatically switches to the \"action\" state when pulled further than this value. The default value is \"96px\". A negative value or a value less than the height will disable this property.[/en]\n  [ja]閾値となる高さを指定します。この値で指定した高さよりもpull downすると、このコンポーネントは自動的に\"action\"状態に移行します。[/ja]",
            "startingLine": 113
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 110
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "threshold-height",
                "startingLine": 111
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 112,
                "typeExpression": "String",
                "type": {
                  "type": "NameExpression",
                  "name": "String"
                },
                "typeList": [
                  "String"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]Specify the threshold height. The component automatically switches to the \"action\" state when pulled further than this value. The default value is \"96px\". A negative value or a value less than the height will disable this property.[/en]\n  [ja]閾値となる高さを指定します。この値で指定した高さよりもpull downすると、このコンポーネントは自動的に\"action\"状態に移行します。[/ja]",
                "startingLine": 113
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 112,
        "typeExpression": "String",
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "typeList": [
          "String"
        ]
      },
      "name": "threshold-height",
      "description": "[en]Specify the threshold height. The component automatically switches to the \"action\" state when pulled further than this value. The default value is \"96px\". A negative value or a value less than the height will disable this property.[/en]\n  [ja]閾値となる高さを指定します。この値で指定した高さよりもpull downすると、このコンポーネントは自動的に\"action\"状態に移行します。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 119,
      "endingLine": 125,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 119
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "fixed-content",
            "startingLine": 120
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": "  [en]If this attribute is set the content of the page will not move when pulling.[/en]\n  [ja]この属性がある時、プルフックが引き出されている時にもコンテンツは動きません。[/ja]",
            "startingLine": 121
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 119
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "fixed-content",
                "startingLine": 120
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": "  [en]If this attribute is set the content of the page will not move when pulling.[/en]\n  [ja]この属性がある時、プルフックが引き出されている時にもコンテンツは動きません。[/ja]",
                "startingLine": 121
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "name": "fixed-content",
      "description": "[en]If this attribute is set the content of the page will not move when pulling.[/en]\n  [ja]この属性がある時、プルフックが引き出されている時にもコンテンツは動きません。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    },
    {
      "fileInfo": {
        "baseName": "pullHook",
        "extension": "js"
      },
      "startingLine": 127,
      "endingLine": 136,
      "codeAncestors": [],
      "docType": "attribute",
      "tags": {
        "tags": [
          {
            "tagDef": {
              "name": "ngdoc",
              "required": true,
              "docProperty": "docType"
            },
            "tagName": "ngdoc",
            "description": "attribute",
            "startingLine": 127
          },
          {
            "tagDef": {
              "name": "name",
              "required": true
            },
            "tagName": "name",
            "description": "ons-changestate",
            "startingLine": 128
          },
          {
            "tagDef": {
              "name": "initonly"
            },
            "tagName": "initonly",
            "description": "",
            "startingLine": 129
          },
          {
            "tagDef": {
              "name": "extensionOf"
            },
            "tagName": "extensionOf",
            "description": "angular",
            "startingLine": 130
          },
          {
            "tagDef": {
              "name": "type",
              "transforms": [
                null,
                null
              ]
            },
            "tagName": "type",
            "description": "",
            "startingLine": 131,
            "typeExpression": "Expression",
            "type": {
              "type": "NameExpression",
              "name": "Expression"
            },
            "typeList": [
              "Expression"
            ]
          },
          {
            "tagDef": {
              "name": "description"
            },
            "tagName": "description",
            "description": " [en]Allows you to specify custom behavior when the \"changestate\" event is fired.[/en]\n [ja]\"changestate\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
            "startingLine": 132
          }
        ],
        "tagsByName": {
          "obj": {
            "ngdoc": [
              {
                "tagDef": {
                  "name": "ngdoc",
                  "required": true,
                  "docProperty": "docType"
                },
                "tagName": "ngdoc",
                "description": "attribute",
                "startingLine": 127
              }
            ],
            "name": [
              {
                "tagDef": {
                  "name": "name",
                  "required": true
                },
                "tagName": "name",
                "description": "ons-changestate",
                "startingLine": 128
              }
            ],
            "initonly": [
              {
                "tagDef": {
                  "name": "initonly"
                },
                "tagName": "initonly",
                "description": "",
                "startingLine": 129
              }
            ],
            "extensionOf": [
              {
                "tagDef": {
                  "name": "extensionOf"
                },
                "tagName": "extensionOf",
                "description": "angular",
                "startingLine": 130
              }
            ],
            "type": [
              {
                "tagDef": {
                  "name": "type",
                  "transforms": [
                    null,
                    null
                  ]
                },
                "tagName": "type",
                "description": "",
                "startingLine": 131,
                "typeExpression": "Expression",
                "type": {
                  "type": "NameExpression",
                  "name": "Expression"
                },
                "typeList": [
                  "Expression"
                ]
              }
            ],
            "description": [
              {
                "tagDef": {
                  "name": "description"
                },
                "tagName": "description",
                "description": " [en]Allows you to specify custom behavior when the \"changestate\" event is fired.[/en]\n [ja]\"changestate\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
                "startingLine": 132
              }
            ]
          },
          "hasProto": false
        },
        "badTags": [],
        "description": ""
      },
      "initonly": true,
      "extensionOf": "angular",
      "type": {
        "tagDef": {
          "name": "type",
          "transforms": [
            null,
            null
          ]
        },
        "tagName": "type",
        "description": "",
        "startingLine": 131,
        "typeExpression": "Expression",
        "type": {
          "type": "NameExpression",
          "name": "Expression"
        },
        "typeList": [
          "Expression"
        ]
      },
      "name": "ons-changestate",
      "description": "[en]Allows you to specify custom behavior when the \"changestate\" event is fired.[/en]\n [ja]\"changestate\"イベントが発火された時の挙動を独自に指定できます。[/ja]",
      "area": "api",
      "module": "..",
      "priority": 0,
      "codeName": null
    }
  ],
  "aliases": [
    "pull-hook"
  ],
  "path": "api/../directive/ons-pull-hook",
  "outputPath": "partials/api/../directive/ons-pull-hook.html"
}